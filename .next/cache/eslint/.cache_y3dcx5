[{"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\components\\card-statistics\\card-stats-vertical\\index.js":"1","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\components\\react-apexcharts\\index.js":"2","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\components\\scroll-to-top\\index.js":"3","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\context\\settingsContext.js":"4","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\hooks\\useSettings.js":"5","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\BlankLayout.js":"6","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\footer\\FooterContent.js":"7","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\footer\\index.js":"8","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\ModeToggler.js":"9","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\NotificationDropdown.js":"10","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\UserDropdown.js":"11","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\appBar\\index.js":"12","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\Drawer.js":"13","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\index.js":"14","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\VerticalNavHeader.js":"15","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\VerticalNavItems.js":"16","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\VerticalNavLink.js":"17","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\VerticalNavSectionTitle.js":"18","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\utils.js":"19","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\VerticalLayout.js":"20","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\styles\\libs\\react-apexcharts\\index.js":"21","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\styles\\libs\\react-datepicker\\index.js":"22","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\breakpoints\\index.js":"23","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\globalStyles.js":"24","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\accordion.js":"25","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\alerts.js":"26","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\avatars.js":"27","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\backdrop.js":"28","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\button.js":"29","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\card.js":"30","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\chip.js":"31","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\dateTimePicker.js":"32","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\dialog.js":"33","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\divider.js":"34","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\index.js":"35","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\input.js":"36","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\link.js":"37","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\list.js":"38","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\menu.js":"39","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\pagination.js":"40","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\paper.js":"41","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\popover.js":"42","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\rating.js":"43","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\select.js":"44","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\snackbar.js":"45","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\switches.js":"46","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\table.js":"47","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\tabs.js":"48","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\timeline.js":"49","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\toggleButton.js":"50","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\tooltip.js":"51","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\typography.js":"52","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\palette\\index.js":"53","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\shadows\\index.js":"54","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\spacing\\index.js":"55","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\ThemeComponent.js":"56","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\ThemeOptions.js":"57","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\typography\\index.js":"58","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\utils\\create-emotion-cache.js":"59","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\utils\\hex-to-rgba.js":"60","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\configs\\themeConfig.js":"61","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\layouts\\components\\UserIcon.js":"62","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\layouts\\components\\vertical\\AppBarContent.js":"63","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\layouts\\UserLayout.js":"64","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\lib\\db.js":"65","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\navigation\\vertical\\index.js":"66","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\401.js":"67","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\404.js":"68","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\500.js":"69","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\account-settings\\index.js":"70","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\blog.js":"71","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\fileupload.ts":"72","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\hakkimizda.js":"73","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\hizmetler.js":"74","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\newfileupload.js":"75","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\sayfalar.js":"76","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\sektorler.js":"77","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\yazicilar.js":"78","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\blog\\index.js":"79","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\cards\\index.js":"80","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\form-layouts\\index.js":"81","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\hakkimizda\\index.js":"82","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\hizmetler\\index.js":"83","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\icons\\index.js":"84","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\iletisim\\index.js":"85","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\index.js":"86","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\pages\\error\\index.js":"87","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\pages\\login\\index.js":"88","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\pages\\register\\index.js":"89","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\sayfalar\\index.js":"90","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\sektorler\\index.js":"91","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\sliders\\index.js":"92","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\tables\\index.js":"93","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\tasarim_olustur\\index.js":"94","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\typography\\index.js":"95","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\yazicilarimiz\\index.js":"96","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\_app.js":"97","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\_document.js":"98","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\account-settings\\TabAccount.js":"99","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\account-settings\\TabInfo.js":"100","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\account-settings\\TabSecurity.js":"101","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardAppleWatch.js":"102","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardFacebook.js":"103","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardHorizontalRatings.js":"104","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardImgTop.js":"105","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardInfluencer.js":"106","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardLinkedIn.js":"107","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardMembership.js":"108","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardMobile.js":"109","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardNavigation.js":"110","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardNavigationCenter.js":"111","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardSupport.js":"112","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardTwitter.js":"113","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardUser.js":"114","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardVerticalRatings.js":"115","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardWithCollapse.js":"116","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\ckEditor\\CkEditor.js":"117","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\ckEditor\\TextEditor.js":"118","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\MenuBar.js":"119","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\MenuItem.js":"120","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\TipTap.js":"121","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\DepositWithdraw.js":"122","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\SalesByCountries.js":"123","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\StatisticsCard.js":"124","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\Table.js":"125","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\TotalEarning.js":"126","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\Trophy.js":"127","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\WeeklyOverview.js":"128","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\BloglarDuzenleForm.js":"129","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\BloglarForm.js":"130","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\FormLayoutsAlignment.js":"131","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\FormLayoutsBasic.js":"132","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\FormLayoutsIcons.js":"133","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\FormLayoutsSeparator.js":"134","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\HakkimizdaLayout.js":"135","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\HizmetlerDuzenleForm.js":"136","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\HizmetlerForm.js":"137","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\SayfaTasarimiOlustur.js":"138","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\SektorlerDuzenleForm.js":"139","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\SektorlerForm.js":"140","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\SliderForm.js":"141","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\TasarimInnerForm.js":"142","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\YazicilarDuzenleForm.js":"143","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\YazicilarForm.js":"144","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\İletisimForm.js":"145","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\pages\\auth\\FooterIllustration.js":"146","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\pages\\misc\\FooterIllustrations.js":"147","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableBasic.js":"148","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableCollapsible.js":"149","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableCustomized.js":"150","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableDense.js":"151","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableSpanning.js":"152","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableStickyHeader.js":"153","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableStickyHeaderBloglar.js":"154","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableStickyHeaderSektorler.js":"155","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableStickyHeaderYazici.js":"156","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\typography\\TypographyHeadings.js":"157","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\typography\\TypographyTexts.js":"158"},{"size":1745,"mtime":1693315327000,"results":"159","hashOfConfig":"160"},{"size":212,"mtime":1693315327000,"results":"161","hashOfConfig":"160"},{"size":894,"mtime":1693315327000,"results":"162","hashOfConfig":"160"},{"size":778,"mtime":1693315327000,"results":"163","hashOfConfig":"160"},{"size":165,"mtime":1693315327000,"results":"164","hashOfConfig":"160"},{"size":879,"mtime":1693315327000,"results":"165","hashOfConfig":"160"},{"size":600,"mtime":1698765262822,"results":"166","hashOfConfig":"160"},{"size":1034,"mtime":1693315327000,"results":"167","hashOfConfig":"160"},{"size":729,"mtime":1693315327000,"results":"168","hashOfConfig":"160"},{"size":8049,"mtime":1693315327000,"results":"169","hashOfConfig":"160"},{"size":4930,"mtime":1693315327000,"results":"170","hashOfConfig":"160"},{"size":1652,"mtime":1693315327000,"results":"171","hashOfConfig":"160"},{"size":1591,"mtime":1693315327000,"results":"172","hashOfConfig":"160"},{"size":3866,"mtime":1693315327000,"results":"173","hashOfConfig":"160"},{"size":1002,"mtime":1698855738178,"results":"174","hashOfConfig":"160"},{"size":606,"mtime":1693315327000,"results":"175","hashOfConfig":"160"},{"size":3560,"mtime":1693315327000,"results":"176","hashOfConfig":"160"},{"size":1777,"mtime":1693315327000,"results":"177","hashOfConfig":"160"},{"size":391,"mtime":1693315327000,"results":"178","hashOfConfig":"160"},{"size":2877,"mtime":1693315327000,"results":"179","hashOfConfig":"160"},{"size":3514,"mtime":1693315327000,"results":"180","hashOfConfig":"160"},{"size":13915,"mtime":1693315327000,"results":"181","hashOfConfig":"160"},{"size":140,"mtime":1693315327000,"results":"182","hashOfConfig":"160"},{"size":1175,"mtime":1693315327000,"results":"183","hashOfConfig":"160"},{"size":1015,"mtime":1693315327000,"results":"184","hashOfConfig":"160"},{"size":3589,"mtime":1693315327000,"results":"185","hashOfConfig":"160"},{"size":608,"mtime":1693315327000,"results":"186","hashOfConfig":"160"},{"size":500,"mtime":1693315327000,"results":"187","hashOfConfig":"160"},{"size":1263,"mtime":1693315327000,"results":"188","hashOfConfig":"160"},{"size":2041,"mtime":1693315327000,"results":"189","hashOfConfig":"160"},{"size":344,"mtime":1693315327000,"results":"190","hashOfConfig":"160"},{"size":1566,"mtime":1693315327000,"results":"191","hashOfConfig":"160"},{"size":3236,"mtime":1693315327000,"results":"192","hashOfConfig":"160"},{"size":192,"mtime":1693315327000,"results":"193","hashOfConfig":"160"},{"size":2186,"mtime":1693315327000,"results":"194","hashOfConfig":"160"},{"size":1872,"mtime":1693315327000,"results":"195","hashOfConfig":"160"},{"size":117,"mtime":1693315327000,"results":"196","hashOfConfig":"160"},{"size":802,"mtime":1693315327000,"results":"197","hashOfConfig":"160"},{"size":306,"mtime":1693315327000,"results":"198","hashOfConfig":"160"},{"size":1148,"mtime":1693315327000,"results":"199","hashOfConfig":"160"},{"size":119,"mtime":1693315327000,"results":"200","hashOfConfig":"160"},{"size":237,"mtime":1693315327000,"results":"201","hashOfConfig":"160"},{"size":191,"mtime":1693315327000,"results":"202","hashOfConfig":"160"},{"size":216,"mtime":1693315327000,"results":"203","hashOfConfig":"160"},{"size":270,"mtime":1693315327000,"results":"204","hashOfConfig":"160"},{"size":264,"mtime":1693315327000,"results":"205","hashOfConfig":"160"},{"size":1690,"mtime":1693315327000,"results":"206","hashOfConfig":"160"},{"size":523,"mtime":1693315327000,"results":"207","hashOfConfig":"160"},{"size":2169,"mtime":1693315327000,"results":"208","hashOfConfig":"160"},{"size":223,"mtime":1693315327000,"results":"209","hashOfConfig":"160"},{"size":610,"mtime":1693315327000,"results":"210","hashOfConfig":"160"},{"size":208,"mtime":1693315327000,"results":"211","hashOfConfig":"160"},{"size":2525,"mtime":1693315327000,"results":"212","hashOfConfig":"160"},{"size":5951,"mtime":1693315327000,"results":"213","hashOfConfig":"160"},{"size":62,"mtime":1693315327000,"results":"214","hashOfConfig":"160"},{"size":1373,"mtime":1693315327000,"results":"215","hashOfConfig":"160"},{"size":1084,"mtime":1693315327000,"results":"216","hashOfConfig":"160"},{"size":1378,"mtime":1693315327000,"results":"217","hashOfConfig":"160"},{"size":123,"mtime":1693315327000,"results":"218","hashOfConfig":"160"},{"size":406,"mtime":1693315327000,"results":"219","hashOfConfig":"160"},{"size":555,"mtime":1698850797564,"results":"220","hashOfConfig":"160"},{"size":284,"mtime":1693315327000,"results":"221","hashOfConfig":"160"},{"size":1946,"mtime":1698765045752,"results":"222","hashOfConfig":"160"},{"size":968,"mtime":1699309011819,"results":"223","hashOfConfig":"160"},{"size":656,"mtime":1699309088769,"results":"224","hashOfConfig":"160"},{"size":1164,"mtime":1698923393343,"results":"225","hashOfConfig":"160"},{"size":1788,"mtime":1693315327000,"results":"226","hashOfConfig":"160"},{"size":2010,"mtime":1693315327000,"results":"227","hashOfConfig":"160"},{"size":2003,"mtime":1693315327000,"results":"228","hashOfConfig":"160"},{"size":2649,"mtime":1698764981198,"results":"229","hashOfConfig":"160"},{"size":2306,"mtime":1699276059890,"results":"230","hashOfConfig":"160"},{"size":1357,"mtime":1698762414702,"results":"231","hashOfConfig":"160"},{"size":1399,"mtime":1699302246479,"results":"232","hashOfConfig":"160"},{"size":2359,"mtime":1699298507518,"results":"233","hashOfConfig":"160"},{"size":1262,"mtime":1699210490010,"results":"234","hashOfConfig":"160"},{"size":309,"mtime":1698511935768,"results":"235","hashOfConfig":"160"},{"size":2359,"mtime":1699268568029,"results":"236","hashOfConfig":"160"},{"size":2359,"mtime":1699296631790,"results":"237","hashOfConfig":"160"},{"size":4073,"mtime":1699281193629,"results":"238","hashOfConfig":"160"},{"size":2775,"mtime":1693315327000,"results":"239","hashOfConfig":"160"},{"size":955,"mtime":1698765827795,"results":"240","hashOfConfig":"160"},{"size":1378,"mtime":1699300032853,"results":"241","hashOfConfig":"160"},{"size":4093,"mtime":1699298777859,"results":"242","hashOfConfig":"160"},{"size":5813,"mtime":1693315327000,"results":"243","hashOfConfig":"160"},{"size":757,"mtime":1698849088004,"results":"244","hashOfConfig":"160"},{"size":530,"mtime":1698607074968,"results":"245","hashOfConfig":"160"},{"size":265,"mtime":1693315327000,"results":"246","hashOfConfig":"160"},{"size":10885,"mtime":1693315327000,"results":"247","hashOfConfig":"160"},{"size":10888,"mtime":1693315327000,"results":"248","hashOfConfig":"160"},{"size":1120,"mtime":1698512769543,"results":"249","hashOfConfig":"160"},{"size":4288,"mtime":1699272492473,"results":"250","hashOfConfig":"160"},{"size":2056,"mtime":1698924137101,"results":"251","hashOfConfig":"160"},{"size":2184,"mtime":1693315327000,"results":"252","hashOfConfig":"160"},{"size":906,"mtime":1698514407426,"results":"253","hashOfConfig":"160"},{"size":491,"mtime":1693315327000,"results":"254","hashOfConfig":"160"},{"size":4098,"mtime":1699297882366,"results":"255","hashOfConfig":"160"},{"size":2250,"mtime":1693315327000,"results":"256","hashOfConfig":"160"},{"size":1937,"mtime":1693315327000,"results":"257","hashOfConfig":"160"},{"size":5665,"mtime":1693315327000,"results":"258","hashOfConfig":"160"},{"size":4982,"mtime":1693315327000,"results":"259","hashOfConfig":"160"},{"size":8128,"mtime":1693315327000,"results":"260","hashOfConfig":"160"},{"size":1019,"mtime":1693315327000,"results":"261","hashOfConfig":"160"},{"size":2282,"mtime":1693315327000,"results":"262","hashOfConfig":"160"},{"size":2560,"mtime":1693315327000,"results":"263","hashOfConfig":"160"},{"size":812,"mtime":1693315327000,"results":"264","hashOfConfig":"160"},{"size":1180,"mtime":1693315327000,"results":"265","hashOfConfig":"160"},{"size":2263,"mtime":1693315327000,"results":"266","hashOfConfig":"160"},{"size":4445,"mtime":1693315327000,"results":"267","hashOfConfig":"160"},{"size":4190,"mtime":1693315327000,"results":"268","hashOfConfig":"160"},{"size":2460,"mtime":1693315327000,"results":"269","hashOfConfig":"160"},{"size":2510,"mtime":1693315327000,"results":"270","hashOfConfig":"160"},{"size":1436,"mtime":1693315327000,"results":"271","hashOfConfig":"160"},{"size":2250,"mtime":1693315327000,"results":"272","hashOfConfig":"160"},{"size":2317,"mtime":1693315327000,"results":"273","hashOfConfig":"160"},{"size":1492,"mtime":1693315327000,"results":"274","hashOfConfig":"160"},{"size":2417,"mtime":1693315327000,"results":"275","hashOfConfig":"160"},{"size":2598,"mtime":1698677861656,"results":"276","hashOfConfig":"160"},{"size":1600,"mtime":1699205450497,"results":"277","hashOfConfig":"160"},{"size":4082,"mtime":1698683897695,"results":"278","hashOfConfig":"160"},{"size":469,"mtime":1698666536075,"results":"279","hashOfConfig":"160"},{"size":1172,"mtime":1698668896660,"results":"280","hashOfConfig":"160"},{"size":6337,"mtime":1693315327000,"results":"281","hashOfConfig":"160"},{"size":4726,"mtime":1693315327000,"results":"282","hashOfConfig":"160"},{"size":2918,"mtime":1693315327000,"results":"283","hashOfConfig":"160"},{"size":4098,"mtime":1693315327000,"results":"284","hashOfConfig":"160"},{"size":4105,"mtime":1693315327000,"results":"285","hashOfConfig":"160"},{"size":1405,"mtime":1693315327000,"results":"286","hashOfConfig":"160"},{"size":3081,"mtime":1693315327000,"results":"287","hashOfConfig":"160"},{"size":6544,"mtime":1699283150905,"results":"288","hashOfConfig":"160"},{"size":5801,"mtime":1699278590062,"results":"289","hashOfConfig":"160"},{"size":3823,"mtime":1693315327000,"results":"290","hashOfConfig":"160"},{"size":5919,"mtime":1693315327000,"results":"291","hashOfConfig":"160"},{"size":3104,"mtime":1693315327000,"results":"292","hashOfConfig":"160"},{"size":8469,"mtime":1693315327000,"results":"293","hashOfConfig":"160"},{"size":9195,"mtime":1699305924937,"results":"294","hashOfConfig":"160"},{"size":6612,"mtime":1699298697387,"results":"295","hashOfConfig":"160"},{"size":6033,"mtime":1699298460740,"results":"296","hashOfConfig":"160"},{"size":5169,"mtime":1698520757749,"results":"297","hashOfConfig":"160"},{"size":6355,"mtime":1699275327896,"results":"298","hashOfConfig":"160"},{"size":5874,"mtime":1699272261547,"results":"299","hashOfConfig":"160"},{"size":4177,"mtime":1699096881581,"results":"300","hashOfConfig":"160"},{"size":1435,"mtime":1698519951685,"results":"301","hashOfConfig":"160"},{"size":6340,"mtime":1699298031698,"results":"302","hashOfConfig":"160"},{"size":5825,"mtime":1699297513480,"results":"303","hashOfConfig":"160"},{"size":6335,"mtime":1698849580908,"results":"304","hashOfConfig":"160"},{"size":1111,"mtime":1693315327000,"results":"305","hashOfConfig":"160"},{"size":1001,"mtime":1693315327000,"results":"306","hashOfConfig":"160"},{"size":1984,"mtime":1693315327000,"results":"307","hashOfConfig":"160"},{"size":4304,"mtime":1693315327000,"results":"308","hashOfConfig":"160"},{"size":2507,"mtime":1693315327000,"results":"309","hashOfConfig":"160"},{"size":1895,"mtime":1693315327000,"results":"310","hashOfConfig":"160"},{"size":2704,"mtime":1693315327000,"results":"311","hashOfConfig":"160"},{"size":3362,"mtime":1699261692612,"results":"312","hashOfConfig":"160"},{"size":3468,"mtime":1699281164534,"results":"313","hashOfConfig":"160"},{"size":3471,"mtime":1699270521475,"results":"314","hashOfConfig":"160"},{"size":3478,"mtime":1699297848812,"results":"315","hashOfConfig":"160"},{"size":3286,"mtime":1693315327000,"results":"316","hashOfConfig":"160"},{"size":4110,"mtime":1693315327000,"results":"317","hashOfConfig":"160"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"thzjud",{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"460"},{"filePath":"461","messages":"462","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"466"},{"filePath":"467","messages":"468","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"469"},{"filePath":"470","messages":"471","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"472"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"477"},{"filePath":"478","messages":"479","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"480"},{"filePath":"481","messages":"482","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"483"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"490"},{"filePath":"491","messages":"492","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"493"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"510"},{"filePath":"511","messages":"512","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"513"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"522"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"571"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"590"},{"filePath":"591","messages":"592","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"593"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"604"},{"filePath":"605","messages":"606","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"607"},{"filePath":"608","messages":"609","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"610"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"615"},{"filePath":"616","messages":"617","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"618"},{"filePath":"619","messages":"620","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"621"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"626"},{"filePath":"627","messages":"628","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":"629"},{"filePath":"630","messages":"631","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"632"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\components\\card-statistics\\card-stats-vertical\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\components\\react-apexcharts\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\components\\scroll-to-top\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\context\\settingsContext.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\hooks\\useSettings.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\BlankLayout.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\footer\\FooterContent.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\footer\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\ModeToggler.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\NotificationDropdown.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\shared-components\\UserDropdown.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\appBar\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\Drawer.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\VerticalNavHeader.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\VerticalNavItems.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\VerticalNavLink.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\components\\vertical\\navigation\\VerticalNavSectionTitle.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\utils.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\layouts\\VerticalLayout.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\styles\\libs\\react-apexcharts\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\styles\\libs\\react-datepicker\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\breakpoints\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\globalStyles.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\accordion.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\alerts.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\avatars.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\backdrop.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\button.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\card.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\chip.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\dateTimePicker.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\dialog.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\divider.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\input.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\link.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\list.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\menu.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\pagination.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\paper.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\popover.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\rating.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\select.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\snackbar.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\switches.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\table.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\tabs.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\timeline.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\toggleButton.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\tooltip.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\overrides\\typography.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\palette\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\shadows\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\spacing\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\ThemeComponent.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\ThemeOptions.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\theme\\typography\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\utils\\create-emotion-cache.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\@core\\utils\\hex-to-rgba.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\configs\\themeConfig.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\layouts\\components\\UserIcon.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\layouts\\components\\vertical\\AppBarContent.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\layouts\\UserLayout.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\lib\\db.js",["659","660"],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\navigation\\vertical\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\401.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\404.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\500.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\account-settings\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\blog.js",["661","662","663","664","665"],"import { query } from \"src/lib/db\"\r\nexport default async function handler(req, res) {\r\n\r\n    if (req.method === \"GET\") {\r\n        const hizmetler = await query({\r\n            query: \"SELECT * FROM tbl_blog\",\r\n            values: [],\r\n        });\r\n        res.status(200).json({ hizmetler: hizmetler });\r\n    }\r\n\r\n    if (req.method === \"POST\") {\r\n        const datas = req.body;\r\n        const baslik = datas.blogBasligi;\r\n        const icerik = datas.blogIcerigi;\r\n        const banner = datas.banner;\r\n        const img = datas.img;\r\n        let message = \"\";\r\n          const addHizmet = await query({\r\n              query: \"INSERT INTO tbl_blog (name,content,banner,img) VALUES (?,?,?,?)\",\r\n              values: [baslik,icerik,banner,img],\r\n          });\r\n          if(addHizmet.insertId){\r\n              message = \"ok\";\r\n          } else{\r\n             message = \"no\";\r\n          }\r\n          let hizmetler = {\r\n             hizmetId: addHizmet.insertId,\r\n             hizmetbaslik:datas.hizmetBasligi\r\n          };\r\n\r\n         res.status(200).json({response : {message:message, hizmetler:hizmetler}});\r\n    }\r\n\r\n\r\n     if(req.method === \"DELETE\"){\r\n       const datas = req.body;\r\n       let message = \"\";\r\n        const dellHizmet = await query({\r\n             query: \"DELETE FROM tbl_blog WHERE id = ?\",\r\n             values: [datas.id],\r\n         });\r\n         if(dellHizmet){\r\n             message = \"ok\";\r\n         } else{\r\n            message = \"no\";\r\n         }\r\n       res.status(200).json({response: {message:message}})\r\n     }\r\n\r\n    if(req.method === \"PUT\"){\r\n        let message = \"\";\r\n        const datas = req.body;\r\n        const baslik = datas.hizmetBasligi;\r\n        const icerik = datas.hizmetIcerigi;\r\n        const banner = datas.banner;\r\n        const img = datas.img;\r\n        const id = datas.id;\r\n\r\n          const updateHizmet = await query({\r\n              query: \"UPDATE tbl_blog SET name = ?, content = ?, banner = ?, img = ? WHERE id = ?\",\r\n              values: [baslik,icerik,banner,img,id],\r\n          });\r\n          const result = updateHizmet.affectedRows;\r\n\r\n          if(result){\r\n            message = \"ok\";\r\n          } else{\r\n           message = \"no\";\r\n         }\r\n\r\n         res.status(200).json({response : {message:message, hizmetler:result}});\r\n    }\r\n\r\n}","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\fileupload.ts",["666","667"],"import { NextApiHandler, NextApiRequest } from \"next\";\r\nimport formidable from \"formidable\";\r\nimport path from \"path\";\r\nimport fs from \"fs/promises\";\r\n\r\nexport const config = {\r\n  api: {\r\n    bodyParser: false,\r\n  },\r\n};\r\n\r\nconst reData = [];\r\n\r\n\r\nconst readFile = (req: NextApiRequest,saveLocally?: boolean): Promise<{ fields: formidable.Fields; files: formidable.Files }> => {\r\n  const options: formidable.Options = {};\r\n  if (saveLocally) {\r\n    options.uploadDir = path.join(process.cwd(), \"/public/uploads\");\r\n    options.filename = (name, ext, path, form) => {\r\n      reData.push(Date.now().toString() + \"_\" + path.originalFilename);\r\n      return Date.now().toString() + \"_\" + path.originalFilename;\r\n    };\r\n  }\r\n\r\n  options.maxFileSize = 4000 * 1024 * 1024;\r\n  const form = formidable(options);\r\n  return new Promise((resolve, reject) => {\r\n    form.parse(req, (err, fields, files) => {\r\n      if (err) reject(err);\r\n      resolve({ fields, files });\r\n    });\r\n  });\r\n};\r\n\r\nconst handler: NextApiHandler = async (req, res) => {\r\n  try {\r\n    await fs.readdir(path.join(process.cwd() + \"/public\", \"/uploads\"));\r\n  } catch (error) {\r\n    await fs.mkdir(path.join(process.cwd() + \"/public\", \"/uploads\"));\r\n  }\r\n  await readFile(req, true);\r\n  res.json(\r\n    {\r\n      done: \"ok\", \r\n      fileName: reData[0],\r\n    }\r\n  );\r\n};\r\n\r\nexport default handler;","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\hakkimizda.js",["668","669"],"import { query } from \"src/lib/db\"\r\nexport default async function handler(req, res) {\r\n\r\n    if (req.method === \"GET\") {\r\n        const hizmetler = await query({\r\n            query: \"SELECT * FROM tbl_hakkimizda where id = 1\",\r\n            values: [],\r\n        });\r\n        res.status(200).json({ hizmetler: hizmetler });\r\n    }\r\n\r\n\r\n    if(req.method === \"PUT\"){\r\n        let message = \"\";\r\n        const datas = req.body;\r\n        const baslik = datas.sayfaBasligi;\r\n        const icerik = datas.hakkimizdaContent;\r\n        const nedenbizBaslik = datas.nedenBizBasligi;\r\n        const nedenbizContent = datas.nedenBizContent;\r\n        const banner = datas.banner;\r\n        const nedenbizImg = datas.neden_biz_gorsel;\r\n        const hakkimizdaImg = datas.hakkimizda_gorsel;\r\n\r\n          const updateHizmet = await query({\r\n              query: \"UPDATE tbl_hakkimizda SET baslik = ?, hakkimizda_gorsel = ?, hakkimizda_icerik = ?, neden_biz_baslik = ?,neden_biz_icerik = ?,neden_biz_gorsel = ?,banner = ? WHERE id = 1\",\r\n              values: [baslik,hakkimizdaImg,icerik,nedenbizBaslik,nedenbizContent,nedenbizImg,banner],\r\n          });\r\n          const result = updateHizmet.affectedRows;\r\n\r\n          if(result){\r\n            message = \"ok\";\r\n          } else{\r\n           message = \"no\";\r\n         }\r\n\r\n         res.status(200).json({response : {message:message, hizmetler:result}});\r\n    }\r\n\r\n}","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\hizmetler.js",["670","671","672"],"import { query } from \"src/lib/db\"\r\n\r\nexport default async function handler(req, res) {\r\n\r\n    if (req.method === \"GET\") {\r\n        const hizmetler = await query({\r\n            query: \"SELECT * FROM tbl_hizmetler\",\r\n            values: [],\r\n        });\r\n        res.status(200).json({ hizmetler: hizmetler });\r\n    }\r\n\r\n    if (req.method === \"POST\") {\r\n        const datas = req.body;\r\n        const baslik = datas.hizmetBasligi;\r\n        const icerik = datas.hizmetIcerigi;\r\n        const banner = datas.banner;\r\n        const img = datas.img;\r\n        let message = \"\";\r\n          const addHizmet = await query({\r\n              query: \"INSERT INTO tbl_hizmetler (name,content,banner,img) VALUES (?,?,?,?)\",\r\n              values: [baslik,icerik,banner,img],\r\n          });\r\n          if(addHizmet.insertId){\r\n              message = \"ok\";\r\n          } else{\r\n             message = \"no\";\r\n          }\r\n          let hizmetler = {\r\n             hizmetId: addHizmet.insertId,\r\n             hizmetbaslik:datas.hizmetBasligi\r\n          };\r\n\r\n         res.status(200).json({response : {message:message, hizmetler:hizmetler}});\r\n    }\r\n\r\n\r\n    if(req.method === \"DELETE\"){\r\n        const datas = req.body;\r\n        let message = \"\";\r\n         const dellHizmet = await query({\r\n              query: \"DELETE FROM tbl_hizmetler WHERE id = ?\",\r\n              values: [datas.id],\r\n          });\r\n          if(dellHizmet){\r\n              message = \"ok\";\r\n          } else{\r\n             message = \"no\";\r\n          }\r\n   \r\n        \r\n        res.status(200).json({response: {message:message}})\r\n\r\n    }\r\n\r\n    if(req.method === \"PUT\"){\r\n        let message = \"\";\r\n        const datas = req.body;\r\n        const baslik = datas.hizmetBasligi;\r\n        const icerik = datas.hizmetIcerigi;\r\n        const banner = datas.banner;\r\n        const img = datas.img;\r\n        const id = datas.id;\r\n\r\n          const updateHizmet = await query({\r\n              query: \"UPDATE tbl_hizmetler SET name = ?, content = ?, banner = ?, img = ? WHERE id = ?\",\r\n              values: [baslik,icerik,banner,img,id],\r\n          });\r\n          const result = updateHizmet.affectedRows;\r\n\r\n          if(result){\r\n            message = \"ok\";\r\n          } else{\r\n           message = \"no\";\r\n         }\r\n\r\n         res.status(200).json({response : {message:message, hizmetler:result}});\r\n    }\r\n\r\n}","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\newfileupload.js",["673"],"import multiparty from 'multiparty';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport const config = {\r\n  api: {\r\n    bodyParser: false,\r\n  },\r\n};\r\n\r\nexport default async (req, res) => {\r\n  if (req.method === 'POST') {\r\n    const form = new multiparty.Form();\r\n    const yuklenenDosyalar = []; \r\n\r\n    form.parse(req, async (err, fields, files) => {\r\n      if (err) {\r\n        res.status(500).json({ error: 'Dosya yükleme hatası' });\r\n        return;\r\n      }\r\n\r\n      const uploadDir = path.join(process.cwd(),\"/public/uploads\");\r\n\r\n      if (!fs.existsSync(uploadDir)) {\r\n        fs.mkdirSync(uploadDir, { recursive: true });\r\n      }\r\n\r\n      for (const dosyaKey of Object.keys(files)) {\r\n        const dosya = files[dosyaKey][0];\r\n        const dosyaYolu = path.join(uploadDir, dosya.originalFilename);\r\n        fs.renameSync(dosya.path, dosyaYolu);\r\n        yuklenenDosyalar.push({\r\n          name: dosya.originalFilename,\r\n          fieldName:dosya.fieldName\r\n        });\r\n      }\r\n\r\n      console.log('Yüklenen Dosyalar:', yuklenenDosyalar);\r\n\r\n      res.status(200).json({message: 'Dosyalar başarıyla yüklendi ve kaydedildi',files:yuklenenDosyalar });\r\n    });\r\n  } else {\r\n    res.status(405).json({ error: 'Yanlış yöntem' });\r\n  }\r\n};","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\sayfalar.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\sektorler.js",["674","675","676"],"import { query } from \"src/lib/db\"\r\n\r\nexport default async function handler(req, res) {\r\n\r\n    if (req.method === \"GET\") {\r\n        const hizmetler = await query({\r\n            query: \"SELECT * FROM tbl_sektorler\",\r\n            values: [],\r\n        });\r\n        res.status(200).json({ hizmetler: hizmetler });\r\n    }\r\n\r\n    if (req.method === \"POST\") {\r\n        const datas = req.body;\r\n        const baslik = datas.sektorBasligi;\r\n        const icerik = datas.sektorIcerigi;\r\n        const banner = datas.banner;\r\n        const img = datas.img;\r\n        let message = \"\";\r\n          const addHizmet = await query({\r\n              query: \"INSERT INTO tbl_sektorler (name,content,banner,img) VALUES (?,?,?,?)\",\r\n              values: [baslik,icerik,banner,img],\r\n          });\r\n          if(addHizmet.insertId){\r\n              message = \"ok\";\r\n          } else{\r\n             message = \"no\";\r\n          }\r\n          let sektorler = {\r\n             hizmetId: addHizmet.insertId,\r\n             hizmetbaslik:datas.sektorBasligi\r\n          };\r\n\r\n         res.status(200).json({response : {message:message, sektorler:sektorler}});\r\n    }\r\n\r\n\r\n    if(req.method === \"DELETE\"){\r\n        const datas = req.body;\r\n        let message = \"\";\r\n         const dellHizmet = await query({\r\n              query: \"DELETE FROM tbl_sektorler WHERE id = ?\",\r\n              values: [datas.id],\r\n          });\r\n          if(dellHizmet){\r\n              message = \"ok\";\r\n          } else{\r\n             message = \"no\";\r\n          }\r\n   \r\n        \r\n        res.status(200).json({response: {message:message}})\r\n\r\n    }\r\n\r\n    if(req.method === \"PUT\"){\r\n        let message = \"\";\r\n        const datas = req.body;\r\n        const baslik = datas.sektorBasligi;\r\n        const icerik = datas.sektorIcerigi;\r\n        const banner = datas.banner;\r\n        const img = datas.img;\r\n        const id = datas.id;\r\n\r\n          const updateHizmet = await query({\r\n              query: \"UPDATE tbl_sektorler SET name = ?, content = ?, banner = ?, img = ? WHERE id = ?\",\r\n              values: [baslik,icerik,banner,img,id],\r\n          });\r\n          const result = updateHizmet.affectedRows;\r\n\r\n          if(result){\r\n            message = \"ok\";\r\n          } else{\r\n           message = \"no\";\r\n         }\r\n\r\n         res.status(200).json({response : {message:message, sektorler:result}});\r\n    }\r\n\r\n}","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\api\\yazicilar.js",["677","678","679"],"import { query } from \"src/lib/db\"\r\n\r\nexport default async function handler(req, res) {\r\n\r\n    if (req.method === \"GET\") {\r\n        const hizmetler = await query({\r\n            query: \"SELECT * FROM tbl_yazicilar\",\r\n            values: [],\r\n        });\r\n        res.status(200).json({ hizmetler: hizmetler });\r\n    }\r\n\r\n    if (req.method === \"POST\") {\r\n        const datas = req.body;\r\n        const baslik = datas.yaziciBasligi;\r\n        const icerik = datas.yaziciIcerigi;\r\n        const banner = datas.banner;\r\n        const img = datas.img;\r\n        let message = \"\";\r\n          const addHizmet = await query({\r\n              query: \"INSERT INTO tbl_yazicilar (name,content,banner,img) VALUES (?,?,?,?)\",\r\n              values: [baslik,icerik,banner,img],\r\n          });\r\n          if(addHizmet.insertId){\r\n              message = \"ok\";\r\n          } else{\r\n             message = \"no\";\r\n          }\r\n          let sektorler = {\r\n             hizmetId: addHizmet.insertId,\r\n             hizmetbaslik:datas.sektorBasligi\r\n          };\r\n\r\n         res.status(200).json({response : {message:message, sektorler:sektorler}});\r\n    }\r\n\r\n\r\n    if(req.method === \"DELETE\"){\r\n        const datas = req.body;\r\n        let message = \"\";\r\n         const dellHizmet = await query({\r\n              query: \"DELETE FROM tbl_yazicilar WHERE id = ?\",\r\n              values: [datas.id],\r\n          });\r\n          if(dellHizmet){\r\n              message = \"ok\";\r\n          } else{\r\n             message = \"no\";\r\n          }\r\n   \r\n        \r\n        res.status(200).json({response: {message:message}})\r\n\r\n    }\r\n\r\n    if(req.method === \"PUT\"){\r\n        let message = \"\";\r\n        const datas = req.body;\r\n        const baslik = datas.yaziciBasligi;\r\n        const icerik = datas.yaziciIcerigi;\r\n        const banner = datas.banner;\r\n        const img = datas.img;\r\n        const id = datas.id;\r\n\r\n          const updateHizmet = await query({\r\n              query: \"UPDATE tbl_yazicilar SET name = ?, content = ?, banner = ?, img = ? WHERE id = ?\",\r\n              values: [baslik,icerik,banner,img,id],\r\n          });\r\n          const result = updateHizmet.affectedRows;\r\n\r\n          if(result){\r\n            message = \"ok\";\r\n          } else{\r\n           message = \"no\";\r\n         }\r\n\r\n         res.status(200).json({response : {message:message, sektorler:result}});\r\n    }\r\n\r\n}","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\blog\\index.js",["680","681","682"],"import Grid from '@mui/material/Grid'\nimport Link from '@mui/material/Link'\nimport Card from '@mui/material/Card'\nimport Typography from '@mui/material/Typography'\nimport { Box, CardHeader } from '@mui/material'\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport { useEffect, useState } from 'react'\nimport BloglarForm from '../../views/form-layouts/BloglarForm'\nimport SektorlerDuzenleForm from '../../views/form-layouts/SektorlerDuzenleForm'\nimport TableStickyHeaderSektorler from '../../views/tables/TableStickyHeaderSektorler'\n\nconst MUITable = () => {\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [updatedData,setUpdatedData] = useState([])\n  const [rand,setRand] = useState();\n    \n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const handleUpdateOpen = (event,data) => {\n    setOpenUpdate(true);\n    setUpdatedData(data);\n    console.log(data);\n  }\n\n  const handleUpdateClose = () => {\n    setOpenUpdate(false);\n  }\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: \"%90\",\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    overflow: 'auto',\n    height:700,\n    pt: 2,\n    px: 4,\n    pb: 3,\n  };\n\n  const rastgeleSayiUret = () => {\n    setRand(Math.floor(Math.random()*(100 - 300 + 1)) + 100);\n  };\n\n  const getDatas = async () => {\n    const postData = {\n      method:\"GET\",\n      headers:{\n        \"Content-Type\":\"application/json\",\n      }\n    }\n    const res = await \n       fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/blog`,\n    postData);\n    const response = await res.json();\n    setTableData(response.hizmetler);\n  }\n\n  useEffect(() => {\n      getDatas();\n   },[rand])\n  \n   const handleClick = async (id) => {\n     console.log(id)\n      const deleteData = {\n        method:\"DELETE\",\n        headers:{\n          \"Content-Type\":\"application/json\",\n        },\n        body: JSON.stringify({\n          id: id,\n          action:\"delete\"\n        })\n      }\n      const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/blog`,deleteData);\n      const response = await res.json();\n      console.log(response);\n      rastgeleSayiUret();\n   }\n  \n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={10}>\n        <Typography variant='h5'>\n          <Link>\n            Bloglar\n          </Link>\n        </Typography>\n        <Typography variant='body2'>Blogları ekleyip çıkartıp düzenleyin..</Typography>\n      </Grid>\n      <Grid item xs={2}>\n      <Button onClick={handleOpen}>Blog Ekle</Button>\n\n      <Modal\n           open={openUpdate}\n           onClose={handleUpdateClose}\n           aria-labelledby=\"child-modal-title\"\n           aria-describedby=\"child-modal-description\"\n         >\n         <Box sx={{ ...style, width: 800 }}>\n           <h2 id=\"child-modal-title\">Yeni Hizmet Ekle</h2>\n              <SektorlerDuzenleForm dataUpdates={updatedData} reDatas={rastgeleSayiUret} closeModal={handleUpdateClose}/>\n           <Button onClick={handleUpdateClose} >İptal</Button>\n         </Box>\n       </Modal>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"child-modal-title\"\n        aria-describedby=\"child-modal-description\"\n      >\n        <Box sx={{ ...style, width: 800 }}>\n          <h2 id=\"child-modal-title\">Yeni Blog Ekle</h2>\n             <BloglarForm reDatas={rastgeleSayiUret} closeModal={handleClose}/>\n          <Button onClick={handleClose}>İptal</Button>\n        </Box>\n      </Modal>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader title='Bloglar Tablosu' titleTypographyProps={{ variant: 'h6' }} />\n          <TableStickyHeaderSektorler data={tableData} handleClickFunc={handleClick} openDuzenleModal={handleUpdateOpen} />\n        </Card>\n      </Grid>\n\n    </Grid>\n  )\n}\n\nexport default MUITable\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\cards\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\form-layouts\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\hakkimizda\\index.js",["683"],"import Grid from '@mui/material/Grid'\nimport Link from '@mui/material/Link'\nimport Card from '@mui/material/Card'\nimport Typography from '@mui/material/Typography'\nimport HakkimizdaLayout from 'src/views/form-layouts/HakkimizdaLayout'\nimport { useEffect, useState } from 'react'\n\nconst MUITable = () => {\n  const [tableData, setTableData] = useState([]);\n  const [rand,setRand] = useState();\n\n  const rastgeleSayiUret = () => {\n    setRand(Math.floor(Math.random()*(100 - 300 + 1)) + 100);\n  };\n\n  const getDatas = async () => {\n    const postData = {\n      method:\"GET\",\n      headers:{\n        \"Content-Type\":\"application/json\",\n      }\n    }\n    const res = await \n       fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/hakkimizda`,\n    postData);\n    const response = await res.json();\n    setTableData(response.hizmetler);\n  }\n\n\n\n  useEffect(() => {\n      getDatas();\n   },[rand])\n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={12}>\n        <Typography variant='h5'>\n          <Link>\n            Hakkımzıda\n          </Link>\n        </Typography>\n        <Typography variant='body2'>Hakkımızda Sayfasını Düzenleyin</Typography>\n      </Grid>\n\n\n      <Grid item xs={12}>\n        <Card>\n           <HakkimizdaLayout dataAll={tableData} randData={rastgeleSayiUret}/>   \n        </Card>\n      </Grid>\n\n    </Grid>\n  )\n}\n\nexport default MUITable\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\hizmetler\\index.js",["684","685","686"],"import Grid from '@mui/material/Grid'\nimport Link from '@mui/material/Link'\nimport Card from '@mui/material/Card'\nimport Typography from '@mui/material/Typography'\nimport { Box, CardHeader } from '@mui/material'\nimport TableStickyHeader from 'src/views/tables/TableStickyHeader'\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport { useEffect, useState } from 'react'\nimport HizmetlerForm from '../../views/form-layouts/HizmetlerForm'\nimport HizmetlerDuzenleForm from '../../views/form-layouts/HizmetlerDuzenleForm'\n\nconst MUITable = () => {\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [updatedData,setUpdatedData] = useState([])\n  const [rand,setRand] = useState();\n    \n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const handleUpdateOpen = (event,data) => {\n    setOpenUpdate(true);\n    setUpdatedData(data);\n    console.log(data);\n  }\n\n  const handleUpdateClose = () => {\n    setOpenUpdate(false);\n  }\n\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: \"%90\",\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    overflow: 'auto',\n    height:700,\n    pt: 2,\n    px: 4,\n    pb: 3,\n  };\n\n  const rastgeleSayiUret = () => {\n    setRand(Math.floor(Math.random()*(100 - 300 + 1)) + 100);\n  };\n\n  const getDatas = async () => {\n    const postData = {\n      method:\"GET\",\n      headers:{\n        \"Content-Type\":\"application/json\",\n      }\n    }\n    const res = await \n       fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/hizmetler`,\n    postData);\n    const response = await res.json();\n    setTableData(response.hizmetler);\n  }\n\n  useEffect(() => {\n      getDatas();\n   },[rand])\n  \n   const handleClick = async (id) => {\n     console.log(id)\n      const deleteData = {\n        method:\"DELETE\",\n        headers:{\n          \"Content-Type\":\"application/json\",\n        },\n        body: JSON.stringify({\n          id: id,\n          action:\"delete\"\n        })\n      }\n      const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/hizmetler`,deleteData);\n      const response = await res.json();\n      console.log(response);\n      rastgeleSayiUret();\n   }\n  \n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={10}>\n        <Typography variant='h5'>\n          <Link>\n            Hizmetlerimiz\n          </Link>\n        </Typography>\n        <Typography variant='body2'>Hizmetleri Düzenleyin</Typography>\n      </Grid>\n      <Grid item xs={2}>\n       <Button onClick={handleOpen}>Hizmet Ekle</Button>\n         <Modal\n           open={open}\n           onClose={handleClose}\n           aria-labelledby=\"child-modal-title\"\n           aria-describedby=\"child-modal-description\"\n         >\n         <Box sx={{ ...style, width: 800 }}>\n           <h2 id=\"child-modal-title\">Yeni Hizmet Ekle</h2>\n              <HizmetlerForm reDatas={rastgeleSayiUret} closeModal={handleClose}/>\n           <Button onClick={handleClose}>İptal</Button>\n         </Box>\n       </Modal>\n        \n       <Modal\n           open={openUpdate}\n           onClose={handleUpdateClose}\n           aria-labelledby=\"child-modal-title\"\n           aria-describedby=\"child-modal-description\"\n         >\n         <Box sx={{ ...style, width: 800 }}>\n           <h2 id=\"child-modal-title\">Yeni Hizmet Ekle</h2>\n              <HizmetlerDuzenleForm dataUpdates={updatedData} reDatas={rastgeleSayiUret} closeModal={handleUpdateClose}/>\n           <Button onClick={handleUpdateClose}>İptal</Button>\n         </Box>\n       </Modal>\n       \n      </Grid>\n\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader title='Hizmeteler Tablosu' titleTypographyProps={{ variant: 'h6' }} />\n          <TableStickyHeader data={tableData} handleClickFunc={handleClick} openDuzenleModal={handleUpdateOpen}/>\n        </Card>\n      </Grid>\n\n    </Grid>\n  )\n}\n\nexport default MUITable\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\icons\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\iletisim\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\pages\\error\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\pages\\login\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\pages\\register\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\sayfalar\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\sektorler\\index.js",["687","688","689"],"import Grid from '@mui/material/Grid'\nimport Link from '@mui/material/Link'\nimport Card from '@mui/material/Card'\nimport Typography from '@mui/material/Typography'\nimport HakkimizdaLayout from 'src/views/form-layouts/HakkimizdaLayout'\nimport { Box, CardHeader } from '@mui/material'\nimport TableStickyHeader from 'src/views/tables/TableStickyHeader'\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport { useEffect, useState } from 'react'\nimport HizmetlerForm from '../../views/form-layouts/HizmetlerForm'\nimport SektorlerForm from '../../views/form-layouts/SektorlerForm'\nimport TableStickyHeaderSektorler from '../../views/tables/TableStickyHeaderSektorler'\nimport SektorlerDuzenleForm from '../../views/form-layouts/SektorlerDuzenleForm'\n\nconst MUITable = () => {\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [updatedData,setUpdatedData] = useState([])\n  const [rand,setRand] = useState();\n    \n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const handleUpdateOpen = (event,data) => {\n    setOpenUpdate(true);\n    setUpdatedData(data);\n    console.log(data);\n  }\n\n  const handleUpdateClose = () => {\n    setOpenUpdate(false);\n  }\n\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: \"%90\",\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    overflow: 'auto',\n    height:700,\n    pt: 2,\n    px: 4,\n    pb: 3,\n  };\n\n  const rastgeleSayiUret = () => {\n    setRand(Math.floor(Math.random()*(100 - 300 + 1)) + 100);\n  };\n\n  const getDatas = async () => {\n    const postData = {\n      method:\"GET\",\n      headers:{\n        \"Content-Type\":\"application/json\",\n      }\n    }\n    const res = await \n       fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/sektorler`,\n    postData);\n    const response = await res.json();\n    setTableData(response.hizmetler);\n  }\n\n  useEffect(() => {\n      getDatas();\n   },[rand])\n  \n   const handleClick = async (id) => {\n     console.log(id)\n      const deleteData = {\n        method:\"DELETE\",\n        headers:{\n          \"Content-Type\":\"application/json\",\n        },\n        body: JSON.stringify({\n          id: id,\n          action:\"delete\"\n        })\n      }\n      const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/sektorler`,deleteData);\n      const response = await res.json();\n      console.log(response);\n      rastgeleSayiUret();\n   }\n  \n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={10}>\n        <Typography variant='h5'>\n          <Link>\n            Sektörler\n          </Link>\n        </Typography>\n        <Typography variant='body2'>Çalışılan sektörler</Typography>\n      </Grid>\n      <Grid item xs={2}>\n      <Button onClick={handleOpen}>Sektör Ekle</Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"child-modal-title\"\n        aria-describedby=\"child-modal-description\"\n      >\n        <Box sx={{ ...style, width: 800 }}>\n          <h2 id=\"child-modal-title\">Yeni Sektör Ekle</h2>\n             <SektorlerForm reDatas={rastgeleSayiUret} closeModal={handleClose}/>\n          <Button onClick={handleClose}>İptal</Button>\n        </Box>\n      </Modal>\n\n      <Modal\n           open={openUpdate}\n           onClose={handleUpdateClose}\n           aria-labelledby=\"child-modal-title\"\n           aria-describedby=\"child-modal-description\"\n         >\n         <Box sx={{ ...style, width: 800 }}>\n           <h2 id=\"child-modal-title\">Yeni Hizmet Ekle</h2>\n              <SektorlerDuzenleForm dataUpdates={updatedData} reDatas={rastgeleSayiUret} closeModal={handleUpdateClose}/>\n           <Button onClick={handleUpdateClose} >İptal</Button>\n         </Box>\n       </Modal>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader title='Sektörler Tablosu' titleTypographyProps={{ variant: 'h6' }} />\n          <TableStickyHeaderSektorler data={tableData} handleClickFunc={handleClick} openDuzenleModal={handleUpdateOpen} />\n        </Card>\n      </Grid>\n     </Grid>\n  )\n}\n\nexport default MUITable\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\sliders\\index.js",["690","691"],"import Grid from '@mui/material/Grid'\nimport Link from '@mui/material/Link'\nimport Card from '@mui/material/Card'\nimport Typography from '@mui/material/Typography'\nimport HakkimizdaLayout from 'src/views/form-layouts/HakkimizdaLayout'\nimport { Box, CardHeader } from '@mui/material'\nimport TableStickyHeader from 'src/views/tables/TableStickyHeader'\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react'\nimport HizmetlerForm from '../../views/form-layouts/HizmetlerForm'\nimport SliderForm from '../../views/form-layouts/SliderForm'\n\nconst MUITable = () => {\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: \"%90\",\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    overflow: 'auto',\n    height:700,\n    pt: 2,\n    px: 4,\n    pb: 3,\n  };\n  \n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={10}>\n        <Typography variant='h5'>\n          <Link>\n            Sliderlar\n          </Link>\n        </Typography>\n        <Typography variant='body2'>Sliderları Düzenleyin</Typography>\n      </Grid>\n      <Grid item xs={2}>\n      <Button onClick={handleOpen}>Slider Ekle</Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"child-modal-title\"\n        aria-describedby=\"child-modal-description\"\n      >\n        <Box sx={{ ...style, width: 800 }}>\n          <h2 id=\"child-modal-title\">Yeni Slider Ekle</h2>\n             <SliderForm />\n          <Button onClick={handleClose}>İptal</Button>\n        </Box>\n      </Modal>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader title='Slider Tablosu' titleTypographyProps={{ variant: 'h6' }} />\n          <TableStickyHeader />\n        </Card>\n      </Grid>\n\n    </Grid>\n  )\n}\n\nexport default MUITable\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\tables\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\tasarim_olustur\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\typography\\index.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\yazicilarimiz\\index.js",["692","693","694"],"import Grid from '@mui/material/Grid'\nimport Link from '@mui/material/Link'\nimport Card from '@mui/material/Card'\nimport Typography from '@mui/material/Typography'\nimport { Box, CardHeader } from '@mui/material'\nimport Modal from '@mui/material/Modal';\nimport Button from '@mui/material/Button';\nimport { useEffect, useState } from 'react'\nimport YazicilarForm from '../../views/form-layouts/YazicilarForm'\nimport YazicilarDuzenleForm from '../../views/form-layouts/YazicilarDuzenleForm'\nimport TableStickyHeaderYazici from '../../views/tables/TableStickyHeaderYazici'\n\nconst MUITable = () => {\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [updatedData,setUpdatedData] = useState([])\n  const [rand,setRand] = useState();\n    \n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const handleUpdateOpen = (event,data) => {\n    setOpenUpdate(true);\n    setUpdatedData(data);\n    console.log(data);\n  }\n\n  const handleUpdateClose = () => {\n    setOpenUpdate(false);\n  }\n\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: \"%90\",\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    overflow: 'auto',\n    height:700,\n    pt: 2,\n    px: 4,\n    pb: 3,\n  };\n\n  const rastgeleSayiUret = () => {\n    setRand(Math.floor(Math.random()*(100 - 300 + 1)) + 100);\n  };\n\n  const getDatas = async () => {\n    const postData = {\n      method:\"GET\",\n      headers:{\n        \"Content-Type\":\"application/json\",\n      }\n    }\n    const res = await \n       fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/yazicilar`,\n    postData);\n    const response = await res.json();\n    setTableData(response.hizmetler);\n  }\n\n  useEffect(() => {\n      getDatas();\n   },[rand])\n  \n   const handleClick = async (id) => {\n     console.log(id)\n      const deleteData = {\n        method:\"DELETE\",\n        headers:{\n          \"Content-Type\":\"application/json\",\n        },\n        body: JSON.stringify({\n          id: id,\n          action:\"delete\"\n        })\n      }\n      const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/sektorler`,deleteData);\n      const response = await res.json();\n      console.log(response);\n      rastgeleSayiUret();\n   }\n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={10}>\n        <Typography variant='h5'>\n          <Link>\n            Yazıcılar\n          </Link>\n        </Typography>\n        <Typography variant='body2'>Hizmet Verilen Yazıcılar</Typography>\n      </Grid>\n      <Grid item xs={2}>\n      <Button onClick={handleOpen}>Yazıcı Ekle</Button>\n      <Modal\n           open={open}\n           onClose={handleClose}\n           aria-labelledby=\"child-modal-title\"\n           aria-describedby=\"child-modal-description\"\n         >\n         <Box sx={{ ...style, width: 800 }}>\n           <h2 id=\"child-modal-title\">Yeni Sektör Ekle</h2>\n              <YazicilarForm reDatas={rastgeleSayiUret} closeModal={handleClose} />\n           <Button onClick={handleClose}>İptal</Button>\n         </Box>\n       </Modal>\n        \n       <Modal\n           open={openUpdate}\n           onClose={handleUpdateClose}\n           aria-labelledby=\"child-modal-title\"\n           aria-describedby=\"child-modal-description\"\n         >\n         <Box sx={{ ...style, width: 800 }}>\n           <h2 id=\"child-modal-title\">Düzenle</h2>\n              <YazicilarDuzenleForm  dataUpdates={updatedData} reDatas={rastgeleSayiUret} closeModal={handleUpdateClose}/> \n           <Button onClick={handleUpdateClose} >İptal</Button>\n         </Box>\n       </Modal>\n       </Grid>\n      <Grid item xs={12}>\n        <Card>\n          <CardHeader title='Yazıcı Tablosu' titleTypographyProps={{ variant: 'h6' }} />\n          <TableStickyHeaderYazici data={tableData} handleClickFunc={handleClick} openDuzenleModal={handleUpdateOpen} />\n        </Card>\n      </Grid>\n\n    </Grid>\n  )\n}\n\nexport default MUITable\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\_app.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\pages\\_document.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\account-settings\\TabAccount.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\account-settings\\TabInfo.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\account-settings\\TabSecurity.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardAppleWatch.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardFacebook.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardHorizontalRatings.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardImgTop.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardInfluencer.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardLinkedIn.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardMembership.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardMobile.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardNavigation.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardNavigationCenter.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardSupport.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardTwitter.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardUser.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardVerticalRatings.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\cards\\CardWithCollapse.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\ckEditor\\CkEditor.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\ckEditor\\TextEditor.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\MenuBar.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\MenuItem.js",["695"],"import styles from './menuItem.module.scss'\r\n\r\nimport React from 'react'\r\nconst remixiconUrl = '/remixicon/fonts/remixicon.symbol.svg'\r\n\r\nexport default ({\r\n  icon, title, action, isActive = null,\r\n}) => (\r\n  <button\r\n    className={`${styles.menu__item}${isActive && isActive() ? \" \"+styles.is__active : ''}`}\r\n    onClick={action}\r\n    title={title}\r\n  >\r\n    <svg className=\"remix\">\r\n      <use xlinkHref={`${remixiconUrl}#ri-${icon}`} />\r\n    </svg>\r\n  </button>\r\n)","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\components\\TipTap.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\DepositWithdraw.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\SalesByCountries.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\StatisticsCard.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\Table.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\TotalEarning.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\Trophy.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\dashboard\\WeeklyOverview.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\BloglarDuzenleForm.js",["696","697","698","699","700"],"import Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport TextEditor from '../components/ckEditor/TextEditor'\r\nimport Image from 'next/image'\r\n\r\nconst HizmetlerDuzenleForm = ({dataUpdates}) => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"/uploads/\"+dataUpdates.banner);\r\n  const [data, setData] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [bannerfile, setBannerFile] = useState(\"/uploads/\"+dataUpdates.banner);\r\n  const [hakkimizdaFile, setHakkimizdaFile] = useState(\"/uploads/\"+dataUpdates.img);\r\n  const [selectHakkimizdaFile, setSelectHakkimizdaFile] = useState(\"/uploads/\"+dataUpdates.img);\r\n  const [sayfaBasligi, setSayfaBasligi] = useState(dataUpdates.name);\r\n  const [nedenBizBasligi, setNedenBizBasligi] = useState();\r\n  const [nedenBizContent, setNedenBizContent] = useState();\r\n  const [hakkimizdaContent, setHakkimizdaContent] = useState(dataUpdates.content);\r\n  const imagesOld = {};\r\n\r\n  const handleChangeHakkimizda = (newContent) => {\r\n    setHakkimizdaContent(newContent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    \r\n    if(bannerfile !== dataUpdates.banner || dataUpdates.banner === \"\"){\r\n    try {\r\n      formData.append(\"bannerImg\", bannerfile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }else{\r\n    const txt = selectedBannerFile.split('/')\r\n     imagesOld[\"bannerImg\"] = txt[2];\r\n  }\r\n\r\n   if(hakkimizdaFile !== dataUpdates.img || dataUpdates.img === \"\"){\r\n    try {\r\n      if (!hakkimizdaFile) return;\r\n      formData.append(\"hizmetImg\", hakkimizdaFile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }else{\r\n    const txts = selectHakkimizdaFile.split('/')\r\n     imagesOld[\"hizmetImg\"] = txts[2];\r\n  }\r\n\r\n  const responseImg = await fetch('/api/newfileupload', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n \r\n    const newimg = await responseImg.json();\r\n    const images = newimg.files;\r\n\r\n    const banner = images.filter(item => item.fieldName === \"bannerImg\");\r\n    const img = images.filter(item => item.fieldName === \"hizmetImg\");\r\n\r\n    console.log(\"New BVADSFVBadfbaefdbfvbf\",selectedBannerFile.split('/')[2])\r\n\r\n    const postData = {\r\n      method:\"PUT\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id:dataUpdates.id,\r\n        blogIcerigi: hakkimizdaContent,\r\n        blogBasligi: sayfaBasligi,\r\n        banner:banner.length === 0 ? selectedBannerFile.split('/')[2] : banner[0].name,\r\n        img:img.length === 0 ? selectHakkimizdaFile.split('/')[2] : img[0].name\r\n      })\r\n    }\r\n    \r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/blog`,postData)\r\n    const response = await res.json();\r\n    console.log(response);\r\n    \r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            {\r\n              // Contentler \r\n            }\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Blog Başlığı' placeholder='Blog Başlığı' value={sayfaBasligi} onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Blog İçeriği </Typography>\r\n              <TextEditor editorStatus={editorLoaded} contentsforupdate={dataUpdates.content} onChange={handleChangeHakkimizda} />\r\n            </Grid>\r\n\r\n            {\r\n              // Contentler End\r\n            }\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }} >\r\n\r\n                Blog Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setHakkimizdaFile(e.target.files?.[0])\r\n                    setSelectHakkimizdaFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectHakkimizdaFile !== \"\" ?\r\n                <Image\r\n                  src={selectHakkimizdaFile}\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Banner Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default HizmetlerDuzenleForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\BloglarForm.js",["701","702","703","704","705"],"import Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport TextEditor from '../components/ckEditor/TextEditor'\r\nimport Image from 'next/image'\r\n\r\nconst BloglarForm = ({reDatas,closeModal}) => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [bannerfile, setBannerFile] = useState();\r\n  const [hakkimizdaFile, setHakkimizdaFile] = useState();\r\n  const [selectHakkimizdaFile, setSelectHakkimizdaFile] = useState(\"\");\r\n  const [sayfaBasligi, setSayfaBasligi] = useState();\r\n  const [hakkimizdaContent, setHakkimizdaContent] = useState();\r\n  const images = {};\r\n\r\n  const handleChangeHakkimizda = (newContent) => {\r\n    setHakkimizdaContent(newContent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      formData.append(\"bannerImg\", bannerfile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    try {\r\n      if (!hakkimizdaFile) return;\r\n      formData.append(\"sektorImg\", hakkimizdaFile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    const responseImg = await fetch('/api/newfileupload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    const newimg = await responseImg.json();\r\n    const images = newimg.files;\r\n    const banner = images.filter(item => item.fieldName === \"bannerImg\");\r\n    const img = images.filter(item => item.fieldName === \"sektorImg\");\r\n\r\n    const postData = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        blogIcerigi: hakkimizdaContent,\r\n        blogBasligi: sayfaBasligi,\r\n        banner: banner.length === 0 ? selectedBannerFile.split('/')[2] : banner[0].name,\r\n        img: img.length === 0 ? selectSektorlerFile.split('/')[2] : img[0].name\r\n      })\r\n    }\r\n\r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/blog`, postData)\r\n    const response = await res.json();\r\n    reDatas();\r\n    closeModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data])\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            {\r\n              // Contentler \r\n            }\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Blog Başlığı' placeholder='Blog Başlığı' onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Blog İçeriği </Typography>\r\n              <TextEditor editorStatus={editorLoaded} onChange={handleChangeHakkimizda} />\r\n            </Grid>\r\n\r\n            {\r\n              // Contentler End\r\n            }\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }} >\r\n\r\n                Blog Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setHakkimizdaFile(e.target.files?.[0])\r\n                    setSelectHakkimizdaFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectHakkimizdaFile !== \"\" ?\r\n                <Image\r\n                  src={selectHakkimizdaFile}\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Banner Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default BloglarForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\FormLayoutsAlignment.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\FormLayoutsBasic.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\FormLayoutsIcons.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\FormLayoutsSeparator.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\HakkimizdaLayout.js",["706","707","708","709","710"],"import Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport TextEditor from '../components/ckEditor/TextEditor'\r\nimport Image from 'next/image'\r\nimport axios from 'axios'\r\n\r\nconst HakkimizdaLayout = ({dataAll,randData}) => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [bannerfile, setBannerFile] = useState(\"\");\r\n  const [hakkimizdaFile, setHakkimizdaFile] = useState(\"\");\r\n  const [selectHakkimizdaFile, setSelectHakkimizdaFile] = useState(\"\");\r\n  const [sayfaBasligi, setSayfaBasligi] = useState(\"\");\r\n  const [nedenBizBasligi, setNedenBizBasligi] = useState(\"\");\r\n  const [nedenBizContent, setNedenBizContent] = useState(\"\");\r\n  const [hakkimizdaContent, setHakkimizdaContent] = useState(\"\");\r\n  const imagesOld = {};\r\n\r\n  useEffect(() => {\r\n    setSelectedImage(\"/uploads/\"+dataAll[0]?.neden_biz_gorsel);\r\n    setSelectedBannerFile(\"/uploads/\"+dataAll[0]?.banner);\r\n    setSelectHakkimizdaFile(\"/uploads/\"+dataAll[0]?.hakkimizda_gorsel);\r\n    setNedenBizContent(dataAll[0]?.neden_biz_icerik);\r\n    setHakkimizdaContent(dataAll[0]?.hakkimizda_icerik);\r\n    setSayfaBasligi(dataAll[0]?.baslik)\r\n    setNedenBizBasligi(dataAll[0]?.neden_biz_baslik);\r\n  }, [dataAll])\r\n\r\n  const handleChangeHakkimizda = (newContent) => {\r\n    setHakkimizdaContent(newContent);\r\n  }\r\n\r\n  const handleChangeNedenBiz = (newContent) => {\r\n    setNedenBizContent(newContent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n  const nedenBizHandleChange = (event) => {\r\n    setNedenBizBasligi(event.target.value);\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n\r\n    const formData = new FormData();\r\n    \r\n    if(file === \"\"){\r\n    try {\r\n      formData.append(\"nedenBiz\", file);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    }else{\r\n      const txt = file.split('/')\r\n       imagesOld[\"nedenBiz\"] = txt[2];\r\n    }\r\n\r\n   if(hakkimizdaFile === \"\"){\r\n    try {\r\n      formData.append(\"hakkimizdaImg\", hakkimizdaFile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    }else{\r\n      const txts = selectHakkimizdaFile.split('/')\r\n       imagesOld[\"hakkimizdaImg\"] = txts[2];\r\n    }\r\n\r\n    if(bannerfile === \"\"){\r\n      try {\r\n        formData.append(\"bannerImg\", bannerfile);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      }else{\r\n        const txts = selectedBannerFile.split('/')\r\n         imagesOld[\"bannerImg\"] = txts[2];\r\n      }\r\n\r\n\r\n  const responseImg = await fetch('/api/newfileupload', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n \r\n    const newimg = await responseImg.json();\r\n    const images = newimg.files;\r\n    const banner = images.filter(item => item.fieldName === \"bannerImg\");\r\n    const img = images.filter(item => item.fieldName === \"hakkimizdaImg\");\r\n    const nedenbiz = images.filter(item => item.fieldName === \"nedenBiz\");\r\n\r\n    console.log(img);\r\n\r\n    const postData = {\r\n      method:\"PUT\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        nedenBizContent: nedenBizContent,\r\n        hakkimizdaContent: hakkimizdaContent,\r\n        nedenBizBasligi: nedenBizBasligi,\r\n        sayfaBasligi: sayfaBasligi,\r\n        banner:bannerfile.length === 0 ? selectedBannerFile.split('/')[2] : bannerfile.name,\r\n        hakkimizda_gorsel:hakkimizdaFile.length === 0 ? selectHakkimizdaFile.split('/')[2] : hakkimizdaFile.name,\r\n        neden_biz_gorsel:file.length === 0 ? selectedImage.split('/')[2] : file.name\r\n      })\r\n    }\r\n    \r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/hakkimizda`,postData)\r\n    const response = await res.json();\r\n    console.log(response);\r\n    randData();\r\n  };\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title='Sayfa İçerikleri' titleTypographyProps={{ variant: 'h6' }} />\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            {\r\n              // Contentler \r\n            }\r\n\r\n            <Grid mt={10} item xs={12}>\r\n              <TextField fullWidth label='Sayfa Başlığı' placeholder='Sayfa Başlığı' value={sayfaBasligi} onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Hakkımızda İçeriği </Typography>\r\n              <TextEditor editorStatus={editorLoaded} contentsforupdate={dataAll[0]?.hakkimizda_icerik} onChange={handleChangeHakkimizda} />\r\n            </Grid>\r\n\r\n            <Grid mt={10} item xs={12}>\r\n              <TextField fullWidth label='Neden Biz Başlığı' placeholder='Neden Biz Başlığı' value={nedenBizBasligi} onChange={nedenBizHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Neden Biz ? İçeriği </Typography>\r\n              <TextEditor editorStatus={editorLoaded} contentsforupdate={dataAll[0]?.neden_biz_icerik} onChange={handleChangeNedenBiz} />\r\n            </Grid>\r\n\r\n            {\r\n              // Contentler End\r\n            }\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={4}>\r\n\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }} >\r\n\r\n                Hakkımızda Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setHakkimizdaFile(e.target.files?.[0])\r\n                    setSelectHakkimizdaFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectHakkimizdaFile !== \"\" ?\r\n                <Image\r\n                  src={selectHakkimizdaFile}\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={4}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Banner Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={4}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                Neden Biz ? Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\" onChange={(e) => {\r\n                  setFile(e.target.files?.[0])\r\n                  setSelectedImage(window.URL.createObjectURL(e.target.files?.[0]));\r\n                }} />\r\n              </Button>\r\n\r\n              {selectedImage !== \"\" ?\r\n                <Image\r\n                  src={selectedImage}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Box\r\n                sx={{\r\n                  gap: 5,\r\n                  display: 'flex',\r\n                  flexWrap: 'wrap',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default HakkimizdaLayout;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\HizmetlerDuzenleForm.js",["711","712","713","714","715"],"import Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport TextEditor from '../components/ckEditor/TextEditor'\r\nimport Image from 'next/image'\r\nimport axios from 'axios'\r\n\r\nconst HizmetlerDuzenleForm = ({dataUpdates,closeModal,reDatas}) => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"/uploads/\"+dataUpdates.banner);\r\n  const [data, setData] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [bannerfile, setBannerFile] = useState(\"/uploads/\"+dataUpdates.banner);\r\n  const [hakkimizdaFile, setHakkimizdaFile] = useState(\"/uploads/\"+dataUpdates.img);\r\n  const [selectHakkimizdaFile, setSelectHakkimizdaFile] = useState(\"/uploads/\"+dataUpdates.img);\r\n  const [sayfaBasligi, setSayfaBasligi] = useState(dataUpdates.name);\r\n  const [nedenBizBasligi, setNedenBizBasligi] = useState();\r\n  const [nedenBizContent, setNedenBizContent] = useState();\r\n  const [hakkimizdaContent, setHakkimizdaContent] = useState(dataUpdates.content);\r\n  const imagesOld = {};\r\n\r\n  const handleChangeHakkimizda = (newContent) => {\r\n    setHakkimizdaContent(newContent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    \r\n    if(bannerfile !== dataUpdates.banner || dataUpdates.banner === \"\"){\r\n    try {\r\n      formData.append(\"bannerImg\", bannerfile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }else{\r\n    const txt = selectedBannerFile.split('/')\r\n     imagesOld[\"bannerImg\"] = txt[2];\r\n  }\r\n\r\n   if(hakkimizdaFile !== dataUpdates.img || dataUpdates.img === \"\"){\r\n    try {\r\n      if (!hakkimizdaFile) return;\r\n      formData.append(\"hizmetImg\", hakkimizdaFile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }else{\r\n    const txts = selectHakkimizdaFile.split('/')\r\n     imagesOld[\"hizmetImg\"] = txts[2];\r\n  }\r\n\r\n  const responseImg = await fetch('/api/newfileupload', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n \r\n    const newimg = await responseImg.json();\r\n    const images = newimg.files;\r\n    const banner = images.filter(item => item.fieldName === \"bannerImg\");\r\n    const img = images.filter(item => item.fieldName === \"hizmetImg\");\r\n\r\n\r\n    const postData = {\r\n      method:\"PUT\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id:dataUpdates.id,\r\n        hizmetIcerigi: hakkimizdaContent,\r\n        hizmetBasligi: sayfaBasligi,\r\n        banner:banner.length === 0 ? selectedBannerFile.split('/')[2] : banner[0].name,\r\n        img:img.length === 0 ? selectHakkimizdaFile.split('/')[2] : img[0].name\r\n      })\r\n    }\r\n    \r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/hizmetler`,postData)\r\n    const response = await res.json();\r\n    console.log(response);\r\n    reDatas();\r\n    closeModal();\r\n  };\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            {\r\n              // Contentler \r\n            }\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Hizmet Başlığı' placeholder='Hizmet Başlığı' value={sayfaBasligi} onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Hizmet İçeriği </Typography>\r\n              <TextEditor editorStatus={editorLoaded} contentsforupdate={dataUpdates.content} onChange={handleChangeHakkimizda} />\r\n            </Grid>\r\n\r\n            {\r\n              // Contentler End\r\n            }\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }} >\r\n\r\n                Hizmet Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setHakkimizdaFile(e.target.files?.[0])\r\n                    setSelectHakkimizdaFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectHakkimizdaFile !== \"\" ?\r\n                <Image\r\n                  src={selectHakkimizdaFile}\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Banner Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default HizmetlerDuzenleForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\HizmetlerForm.js",["716","717","718","719","720"],"import Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport TextEditor from '../components/ckEditor/TextEditor'\r\nimport Image from 'next/image'\r\nimport axios from 'axios'\r\n\r\nconst HizmetlerForm = ({reDatas,closeModal}) => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [bannerfile, setBannerFile] = useState();\r\n  const [hakkimizdaFile, setHakkimizdaFile] = useState();\r\n  const [selectHakkimizdaFile, setSelectHakkimizdaFile] = useState(\"\");\r\n  const [sayfaBasligi, setSayfaBasligi] = useState();\r\n  const [nedenBizBasligi, setNedenBizBasligi] = useState();\r\n  const [nedenBizContent, setNedenBizContent] = useState();\r\n  const [hakkimizdaContent, setHakkimizdaContent] = useState();\r\n  const images = {};\r\n\r\n\r\n  const handleChangeHakkimizda = (newContent) => {\r\n    setHakkimizdaContent(newContent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      formData.append(\"bannerImg\", bannerfile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    try {\r\n      if (!hakkimizdaFile) return;\r\n      formData.append(\"hizmetImg\", hakkimizdaFile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    const responseImg = await fetch('/api/newfileupload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    const newimg = await responseImg.json();\r\n    const images = newimg.files;\r\n    const banner = images.filter(item => item.fieldName === \"bannerImg\");\r\n    const img = images.filter(item => item.fieldName === \"hizmetImg\");\r\n\r\n    const postData = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        hizmetIcerigi: hakkimizdaContent,\r\n        hizmetBasligi: sayfaBasligi,\r\n        banner: banner.length === 0 ? selectedBannerFile.split('/')[2] : banner[0].name,\r\n        img: img.length === 0 ? selectSektorlerFile.split('/')[2] : img[0].name\r\n      })\r\n    }\r\n\r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/hizmetler`, postData)\r\n    reDatas();\r\n    closeModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data])\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            {\r\n              // Contentler \r\n            }\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Hizmet Başlığı' placeholder='Hizmet Başlığı' onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Hizmet İçeriği </Typography>\r\n              <TextEditor editorStatus={editorLoaded} onChange={handleChangeHakkimizda} />\r\n            </Grid>\r\n\r\n            {\r\n              // Contentler End\r\n            }\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }} >\r\n\r\n                Hizmet Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setHakkimizdaFile(e.target.files?.[0])\r\n                    setSelectHakkimizdaFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectHakkimizdaFile !== \"\" ?\r\n                <Image\r\n                  src={selectHakkimizdaFile}\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Banner Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default HizmetlerForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\SayfaTasarimiOlustur.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\SektorlerDuzenleForm.js",["721","722","723","724","725"],"import Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport TextEditor from '../components/ckEditor/TextEditor'\r\nimport Image from 'next/image'\r\nimport axios from 'axios'\r\n\r\nconst SektorlerDuzenleForm = ({dataUpdates,closeModal,reDatas}) => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"/uploads/\"+dataUpdates.banner);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [bannerfile, setBannerFile] = useState(\"/uploads/\"+dataUpdates.banner);\r\n  const [hakkimizdaFile, setHakkimizdaFile] = useState(\"/uploads/\"+dataUpdates.img);\r\n  const [selectHakkimizdaFile, setSelectHakkimizdaFile] = useState(\"/uploads/\"+dataUpdates.img);\r\n  const [sayfaBasligi, setSayfaBasligi] = useState(dataUpdates.name);\r\n  const [hakkimizdaContent, setHakkimizdaContent] = useState(dataUpdates.content);\r\n  const imagesOld = {};\r\n\r\n  const handleChangeHakkimizda = (newContent) => {\r\n    setHakkimizdaContent(newContent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    \r\n    if(bannerfile !== dataUpdates.banner || dataUpdates.banner === \"\"){\r\n    try {\r\n      formData.append(\"bannerImg\", bannerfile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }else{\r\n    const txt = selectedBannerFile.split('/')\r\n     imagesOld[\"bannerImg\"] = txt[2];\r\n  }\r\n\r\n   if(hakkimizdaFile !== dataUpdates.img || dataUpdates.img === \"\"){\r\n    try {\r\n      if (!hakkimizdaFile) return;\r\n      formData.append(\"hizmetImg\", hakkimizdaFile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }else{\r\n    const txts = selectHakkimizdaFile.split('/')\r\n     imagesOld[\"hizmetImg\"] = txts[2];\r\n  }\r\n\r\n  const responseImg = await fetch('/api/newfileupload', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n \r\n    const newimg = await responseImg.json();\r\n    const images = newimg.files;\r\n    const banner = images.filter(item => item.fieldName === \"bannerImg\");\r\n    const img = images.filter(item => item.fieldName === \"hizmetImg\");\r\n\r\n\r\n    const postData = {\r\n      method:\"PUT\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id:dataUpdates.id,\r\n        sektorIcerigi: hakkimizdaContent,\r\n        sektorBasligi: sayfaBasligi,\r\n        banner:banner.length === 0 ? selectedBannerFile.split('/')[2] : banner[0].name,\r\n        img:img.length === 0 ? selectHakkimizdaFile.split('/')[2] : img[0].name\r\n      })\r\n    }\r\n    \r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/sektorler`,postData)\r\n    const response = await res.json();\r\n    console.log(response);\r\n    reDatas();\r\n    closeModal();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            {\r\n              // Contentler \r\n            }\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Sektör Başlığı' placeholder='Sektör Başlığı' value={sayfaBasligi} onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Hizmet İçeriği </Typography>\r\n              <TextEditor editorStatus={editorLoaded} contentsforupdate={dataUpdates.content} onChange={handleChangeHakkimizda} />\r\n            </Grid>\r\n\r\n            {\r\n              // Contentler End\r\n            }\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }} >\r\n\r\n                Hizmet Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setHakkimizdaFile(e.target.files?.[0])\r\n                    setSelectHakkimizdaFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectHakkimizdaFile !== \"\" ?\r\n                <Image\r\n                  src={selectHakkimizdaFile}\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Banner Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SektorlerDuzenleForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\SektorlerForm.js",["726","727","728","729","730"],"import Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport TextEditor from '../components/ckEditor/TextEditor'\r\nimport Image from 'next/image'\r\n\r\nconst SektorlerForm = ({reDatas,closeModal}) => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [bannerfile, setBannerFile] = useState();\r\n  const [sektorlerFile, setSektortlerFile] = useState();\r\n  const [selectSektorlerFile, setSelectSektorlerFile] = useState(\"\");\r\n  const [sayfaBasligi, setSayfaBasligi] = useState();\r\n  const [hakkimizdaContent, setHakkimizdaContent] = useState();\r\n  const imagesOld = {};\r\n\r\n\r\n  const handleChangeHakkimizda = (newContent) => {\r\n    setHakkimizdaContent(newContent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      formData.append(\"bannerImg\", bannerfile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    try {\r\n      if (!sektorlerFile) return;\r\n      formData.append(\"sektorImg\", sektorlerFile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n\r\n    const responseImg = await fetch('/api/newfileupload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    const newimg = await responseImg.json();\r\n    const images = newimg.files;\r\n\r\n    const banner = images.filter(item => item.fieldName === \"bannerImg\");\r\n    const img = images.filter(item => item.fieldName === \"sektorImg\");\r\n\r\n    const postData = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        sektorIcerigi: hakkimizdaContent,\r\n        sektorBasligi: sayfaBasligi,\r\n        banner: banner.length === 0 ? selectedBannerFile.split('/')[2] : banner[0].name,\r\n        img: img.length === 0 ? selectSektorlerFile.split('/')[2] : img[0].name\r\n      })\r\n    }\r\n\r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/sektorler`, postData)\r\n    const response = await res.json();\r\n    reDatas();\r\n    closeModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data])\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            {\r\n              // Contentler \r\n            }\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Sektör Başlığı' placeholder='Sektör Başlığı' onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Sektör İçeriği </Typography>\r\n              <TextEditor editorStatus={editorLoaded} onChange={handleChangeHakkimizda} />\r\n            </Grid>\r\n\r\n            {\r\n              // Contentler End\r\n            }\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }} >\r\n\r\n                Sektör Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setSektortlerFile(e.target.files?.[0])\r\n                    setSelectSektorlerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectSektorlerFile !== \"\" ?\r\n                <Image\r\n                  src={selectSektorlerFile}\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Banner Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n              <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                Kaydet\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SektorlerForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\SliderForm.js",["731","732"],"import Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport Image from 'next/image'\r\nimport axios from 'axios'\r\n\r\nconst SliderForm = () => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [bannerfile, setBannerFile] = useState();\r\n  const [sayfaBasligi, setSayfaBasligi] = useState();\r\n  const [sliderBtnTxt, setSliderBtnTxt] = useState();\r\n  const [sliderBtnLink, setSlidetBtnLink] = useState();\r\n  const images = {};\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n  const formData = new FormData();\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n  const sliderBtnTxtChange = (event) => {\r\n    setSliderBtnTxt(event.target.value);\r\n  }\r\n\r\n  const sliderBtnLinkChange = (event) => {\r\n    setSlidetBtnLink(event.target.value);\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n\r\n    try {\r\n      if (!bannerfile) return;\r\n      formData.append(\"bannerImg\", bannerfile);\r\n      const { data } = await axios.post(\"/api/fileupload\", formData);\r\n      console.log(data);\r\n      images[\"bannerImg\"] = data.fileName;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setUploading(false);\r\n\r\n\r\n    setData({\r\n      images: images,\r\n      sliderBtnTxt:sliderBtnTxt,\r\n      sliderBasligi: sayfaBasligi,\r\n      sliderBtnLink: sliderBtnLink\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data])\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Slider Başlığı' placeholder='Slider Başlığı' onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Slider Button Metni' placeholder='Slider Button Metni' onChange={sliderBtnTxtChange} />\r\n            </Grid>\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Slider Button Link' placeholder='Slider Button Link' onChange={sliderBtnLinkChange} />\r\n            </Grid>\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Slider Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SliderForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\TasarimInnerForm.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\YazicilarDuzenleForm.js",["733","734","735","736","737"],"import Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport TextEditor from '../components/ckEditor/TextEditor'\r\nimport Image from 'next/image'\r\n\r\nconst YazicilarDuzenleForm = ({dataUpdates,closeModal,reDatas}) => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"/uploads/\"+dataUpdates.banner);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [bannerfile, setBannerFile] = useState(\"/uploads/\"+dataUpdates.banner);\r\n  const [hakkimizdaFile, setHakkimizdaFile] = useState(\"/uploads/\"+dataUpdates.img);\r\n  const [selectHakkimizdaFile, setSelectHakkimizdaFile] = useState(\"/uploads/\"+dataUpdates.img);\r\n  const [sayfaBasligi, setSayfaBasligi] = useState(dataUpdates.name);\r\n  const [hakkimizdaContent, setHakkimizdaContent] = useState(dataUpdates.content);\r\n  const imagesOld = {};\r\n\r\n  const handleChangeHakkimizda = (newContent) => {\r\n    setHakkimizdaContent(newContent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    \r\n    if(bannerfile !== dataUpdates.banner || dataUpdates.banner === \"\"){\r\n    try {\r\n      formData.append(\"bannerImg\", bannerfile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }else{\r\n    const txt = selectedBannerFile.split('/')\r\n     imagesOld[\"bannerImg\"] = txt[2];\r\n  }\r\n\r\n   if(hakkimizdaFile !== dataUpdates.img || dataUpdates.img === \"\"){\r\n    try {\r\n      if (!hakkimizdaFile) return;\r\n      formData.append(\"hizmetImg\", hakkimizdaFile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }else{\r\n    const txts = selectHakkimizdaFile.split('/')\r\n     imagesOld[\"hizmetImg\"] = txts[2];\r\n  }\r\n\r\n  const responseImg = await fetch('/api/newfileupload', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n \r\n    const newimg = await responseImg.json();\r\n    const images = newimg.files;\r\n    const banner = images.filter(item => item.fieldName === \"bannerImg\");\r\n    const img = images.filter(item => item.fieldName === \"hizmetImg\");\r\n\r\n\r\n    const postData = {\r\n      method:\"PUT\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id:dataUpdates.id,\r\n        yaziciIcerigi: hakkimizdaContent,\r\n        yaziciBasligi: sayfaBasligi,\r\n        banner:banner.length === 0 ? selectedBannerFile.split('/')[2] : banner[0].name,\r\n        img:img.length === 0 ? selectHakkimizdaFile.split('/')[2] : img[0].name\r\n      })\r\n    }\r\n    \r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/yazicilar`,postData)\r\n    const response = await res.json();\r\n    console.log(response);\r\n    reDatas();\r\n    closeModal();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            {\r\n              // Contentler \r\n            }\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Sektör Başlığı' placeholder='Sektör Başlığı' value={sayfaBasligi} onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Hizmet İçeriği </Typography>\r\n              <TextEditor editorStatus={editorLoaded} contentsforupdate={dataUpdates.content} onChange={handleChangeHakkimizda} />\r\n            </Grid>\r\n\r\n            {\r\n              // Contentler End\r\n            }\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }} >\r\n\r\n                Yazıcı Görseli Değiştir\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setHakkimizdaFile(e.target.files?.[0])\r\n                    setSelectHakkimizdaFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectHakkimizdaFile !== \"\" ?\r\n                <Image\r\n                  src={selectHakkimizdaFile}\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Yazıcı Görseli Değiştir\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default YazicilarDuzenleForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\YazicilarForm.js",["738","739","740","741","742"],"import Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport TextEditor from '../components/ckEditor/TextEditor'\r\nimport Image from 'next/image'\r\nimport axios from 'axios'\r\n\r\nconst YazicilarForm = ({reDatas,closeModal}) => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [bannerfile, setBannerFile] = useState();\r\n  const [hakkimizdaFile, setHakkimizdaFile] = useState();\r\n  const [selectHakkimizdaFile, setSelectHakkimizdaFile] = useState(\"\");\r\n  const [sayfaBasligi, setSayfaBasligi] = useState();\r\n  const [hakkimizdaContent, setHakkimizdaContent] = useState();\r\n  const [uploading, setUploading] = useState(false);\r\n  const images = {};\r\n\r\n\r\n  const handleChangeHakkimizda = (newContent) => {\r\n    setHakkimizdaContent(newContent);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      formData.append(\"bannerImg\", bannerfile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    try {\r\n      if (!hakkimizdaFile) return;\r\n      formData.append(\"yaziciImg\", hakkimizdaFile);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    const responseImg = await fetch('/api/newfileupload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    const newimg = await responseImg.json();\r\n    const images = newimg.files;\r\n    const banner = images.filter(item => item.fieldName === \"bannerImg\");\r\n    const img = images.filter(item => item.fieldName === \"yaziciImg\");\r\n\r\n    const postData = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        yaziciIcerigi: hakkimizdaContent,\r\n        yaziciBasligi: sayfaBasligi,\r\n        banner: banner.length === 0 ? selectedBannerFile.split('/')[2] : banner[0].name,\r\n        img: img.length === 0 ? selectSektorlerFile.split('/')[2] : img[0].name\r\n      })\r\n    }\r\n\r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_NEXT_PUBLUC_URL}/api/yazicilar`, postData)\r\n    reDatas();\r\n    closeModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data])\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            {\r\n              // Contentler \r\n            }\r\n\r\n            <Grid mt={3} item xs={12}>\r\n              <TextField fullWidth label='Yazıcı Başlığı' placeholder='Yazıcı Başlığı' onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6' style={{ paddingBottom: 10 }}> Yazıcı Özellikleri </Typography>\r\n              <TextEditor editorStatus={editorLoaded} onChange={handleChangeHakkimizda} />\r\n            </Grid>\r\n\r\n            {\r\n              // Contentler End\r\n            }\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }} >\r\n\r\n                Yazıcı Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setHakkimizdaFile(e.target.files?.[0])\r\n                    setSelectHakkimizdaFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectHakkimizdaFile !== \"\" ?\r\n                <Image\r\n                  src={selectHakkimizdaFile}\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Banner Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={12}>\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default YazicilarForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\form-layouts\\İletisimForm.js",["743","744"],"import Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Input from '@mui/material/Input'\r\nimport TextField from '@mui/material/TextField'\r\nimport CardHeader from '@mui/material/CardHeader'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport TrendingUp from 'mdi-material-ui/TrendingUp'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport Image from 'next/image'\r\nimport axios from 'axios'\r\n\r\nconst IletisimForm = () => {\r\n\r\n  const [editorLoaded, setEditorLoaded] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [selectedBannerFile, setSelectedBannerFile] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [bannerfile, setBannerFile] = useState();\r\n  const [hakkimizdaFile, setHakkimizdaFile] = useState();\r\n  const [sayfaBasligi, setSayfaBasligi] = useState();\r\n  const [nedenBizBasligi, setNedenBizBasligi] = useState();\r\n  const images = {};\r\n\r\n  useEffect(() => {\r\n    setEditorLoaded(true);\r\n  }, []);\r\n\r\n\r\n  const formData = new FormData();\r\n\r\n  const baslikHandleChange = (event) => {\r\n    setSayfaBasligi(event.target.value);\r\n  }\r\n\r\n  const nedenBizHandleChange = (event) => {\r\n    setNedenBizBasligi(event.target.value);\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    setUploading(true);\r\n\r\n    try {\r\n      if (!file) return;\r\n      formData.append(\"nedenBizImg\", file);\r\n      const { data } = await axios.post(\"/api/fileupload\", formData);\r\n      console.log(data);\r\n      images[\"nedenBiz\"] = data.fileName;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n\r\n    try {\r\n      if (!bannerfile) return;\r\n      formData.append(\"bannerImg\", bannerfile);\r\n      const { data } = await axios.post(\"/api/fileupload\", formData);\r\n      console.log(data);\r\n      images[\"bannerImg\"] = data.fileName;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    try {\r\n      if (!bannerfile) return;\r\n      formData.append(\"hakkimizdaImg\", hakkimizdaFile);\r\n      const { data } = await axios.post(\"/api/fileupload\", formData);\r\n      console.log(data);\r\n      images[\"hakkimizdaImg\"] = data.fileName;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setUploading(false);\r\n\r\n\r\n    setData({\r\n      images: images,\r\n      nedenBizBasligi: nedenBizBasligi,\r\n      sayfaBasligi: sayfaBasligi\r\n    });\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data])\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title='Sayfa İçerikleri' titleTypographyProps={{ variant: 'h6' }} />\r\n      <CardContent>\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <Grid container spacing={5}>\r\n\r\n            <Grid mt={10} item xs={6}>\r\n              <TextField fullWidth label='Telefon Numarası' placeholder='Telefon Numarası' onChange={baslikHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid mt={10} item xs={6}>\r\n              <TextField fullWidth label='Telefon Numarası (Şirket)' placeholder='Telefon Numarası (Şirket)' onChange={nedenBizHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid mt={10} item xs={6}>\r\n              <TextField fullWidth label='Slogan' placeholder='Slogan' onChange={nedenBizHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid mt={10} item xs={6}>\r\n              <TextField fullWidth label='Email' placeholder='Email' onChange={nedenBizHandleChange} />\r\n            </Grid>\r\n\r\n            <Grid mt={10} item xs={12}>\r\n              <TextField fullWidth label='Adres' placeholder='Adres' onChange={nedenBizHandleChange} />\r\n            </Grid>\r\n\r\n\r\n            {\r\n              // Medyalar \r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Typography mt={10} variant='h6'>\r\n                Medya Alanı\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}>\r\n                Banner Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\"\r\n                  onChange={(e) => {\r\n                    setBannerFile(e.target.files?.[0])\r\n                    setSelectedBannerFile(window.URL.createObjectURL(e.target.files?.[0]));\r\n                  }}\r\n                />\r\n              </Button>\r\n\r\n              {selectedBannerFile !== \"\" ?\r\n                <Image\r\n                  src={selectedBannerFile}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n              <Button component=\"label\" variant=\"contained\" startIcon={<TrendingUp />}\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                İletişim Görseli Yükle\r\n                <Input style={{ display: \"none\" }} type=\"file\" onChange={(e) => {\r\n                  setFile(e.target.files?.[0])\r\n                  setSelectedImage(window.URL.createObjectURL(e.target.files?.[0]));\r\n                }} />\r\n              </Button>\r\n\r\n              {selectedImage !== \"\" ?\r\n                <Image\r\n                  src={selectedImage}\r\n                  alt=\"Picture of the author\"\r\n                  width={500}\r\n                  height={500}\r\n                />\r\n                : \"\"}\r\n\r\n            </Grid>\r\n\r\n            {\r\n              // Medyalar End\r\n            }\r\n\r\n            <Grid item xs={12}>\r\n              <Box\r\n                sx={{\r\n                  gap: 5,\r\n                  display: 'flex',\r\n                  flexWrap: 'wrap',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Button type='submit' onClick={onSubmit} variant='contained' size='large'>\r\n                  Kaydet\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default IletisimForm;\r\n","C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\pages\\auth\\FooterIllustration.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\pages\\misc\\FooterIllustrations.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableBasic.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableCollapsible.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableCustomized.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableDense.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableSpanning.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableStickyHeader.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableStickyHeaderBloglar.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableStickyHeaderSektorler.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\tables\\TableStickyHeaderYazici.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\typography\\TypographyHeadings.js",[],"C:\\Users\\Pixwar\\Desktop\\panel\\client\\src\\views\\typography\\TypographyTexts.js",[],{"ruleId":"745","severity":2,"message":"746","line":16,"column":9,"nodeType":"747","messageId":"748","endLine":16,"endColumn":24,"fix":"749"},{"ruleId":"745","severity":2,"message":"746","line":21,"column":9,"nodeType":"747","messageId":"748","endLine":21,"endColumn":26,"fix":"750"},{"ruleId":"751","severity":2,"message":"752","line":1,"column":1,"nodeType":null,"fix":"753"},{"ruleId":"754","severity":2,"message":"755","line":2,"column":1,"nodeType":"756","messageId":"757","endLine":76,"endColumn":2,"fix":"758"},{"ruleId":"754","severity":2,"message":"755","line":19,"column":11,"nodeType":"759","messageId":"757","endLine":22,"endColumn":14,"fix":"760"},{"ruleId":"754","severity":2,"message":"755","line":28,"column":11,"nodeType":"759","messageId":"757","endLine":31,"endColumn":13,"fix":"761"},{"ruleId":"754","severity":2,"message":"755","line":40,"column":9,"nodeType":"759","messageId":"757","endLine":43,"endColumn":13,"fix":"762"},{"ruleId":"745","severity":2,"message":"746","line":21,"column":7,"nodeType":"747","messageId":"748","endLine":21,"endColumn":66,"fix":"763"},{"ruleId":"745","severity":2,"message":"746","line":27,"column":3,"nodeType":"747","messageId":"748","endLine":32,"endColumn":6,"fix":"764"},{"ruleId":"751","severity":2,"message":"752","line":1,"column":1,"nodeType":null,"fix":"765"},{"ruleId":"754","severity":2,"message":"755","line":2,"column":1,"nodeType":"756","messageId":"757","endLine":39,"endColumn":2,"fix":"766"},{"ruleId":"754","severity":2,"message":"755","line":20,"column":11,"nodeType":"759","messageId":"757","endLine":23,"endColumn":14,"fix":"767"},{"ruleId":"754","severity":2,"message":"755","line":29,"column":11,"nodeType":"759","messageId":"757","endLine":32,"endColumn":13,"fix":"768"},{"ruleId":"754","severity":2,"message":"755","line":41,"column":10,"nodeType":"759","messageId":"757","endLine":44,"endColumn":14,"fix":"769"},{"ruleId":"745","severity":2,"message":"746","line":19,"column":9,"nodeType":"747","messageId":"748","endLine":19,"endColumn":16,"fix":"770"},{"ruleId":"754","severity":2,"message":"755","line":20,"column":11,"nodeType":"759","messageId":"757","endLine":23,"endColumn":14,"fix":"771"},{"ruleId":"754","severity":2,"message":"755","line":29,"column":11,"nodeType":"759","messageId":"757","endLine":32,"endColumn":13,"fix":"772"},{"ruleId":"754","severity":2,"message":"755","line":41,"column":10,"nodeType":"759","messageId":"757","endLine":44,"endColumn":14,"fix":"773"},{"ruleId":"754","severity":2,"message":"755","line":20,"column":11,"nodeType":"759","messageId":"757","endLine":23,"endColumn":14,"fix":"774"},{"ruleId":"754","severity":2,"message":"755","line":29,"column":11,"nodeType":"759","messageId":"757","endLine":32,"endColumn":13,"fix":"775"},{"ruleId":"754","severity":2,"message":"755","line":41,"column":10,"nodeType":"759","messageId":"757","endLine":44,"endColumn":14,"fix":"776"},{"ruleId":"754","severity":2,"message":"755","line":25,"column":3,"nodeType":"759","messageId":"757","endLine":27,"endColumn":5,"fix":"777"},{"ruleId":"754","severity":2,"message":"755","line":67,"column":5,"nodeType":"759","messageId":"757","endLine":69,"endColumn":15,"fix":"778"},{"ruleId":"754","severity":2,"message":"755","line":80,"column":7,"nodeType":"759","messageId":"757","endLine":89,"endColumn":8,"fix":"779"},{"ruleId":"754","severity":2,"message":"755","line":23,"column":5,"nodeType":"759","messageId":"757","endLine":25,"endColumn":15,"fix":"780"},{"ruleId":"754","severity":2,"message":"755","line":25,"column":3,"nodeType":"759","messageId":"757","endLine":27,"endColumn":5,"fix":"781"},{"ruleId":"754","severity":2,"message":"755","line":68,"column":5,"nodeType":"759","messageId":"757","endLine":70,"endColumn":15,"fix":"782"},{"ruleId":"754","severity":2,"message":"755","line":81,"column":7,"nodeType":"759","messageId":"757","endLine":90,"endColumn":8,"fix":"783"},{"ruleId":"754","severity":2,"message":"755","line":28,"column":3,"nodeType":"759","messageId":"757","endLine":30,"endColumn":5,"fix":"784"},{"ruleId":"754","severity":2,"message":"755","line":71,"column":5,"nodeType":"759","messageId":"757","endLine":73,"endColumn":15,"fix":"785"},{"ruleId":"754","severity":2,"message":"755","line":84,"column":7,"nodeType":"759","messageId":"757","endLine":93,"endColumn":8,"fix":"786"},{"ruleId":"754","severity":2,"message":"755","line":17,"column":3,"nodeType":"759","messageId":"757","endLine":19,"endColumn":5,"fix":"787"},{"ruleId":"754","severity":2,"message":"755","line":20,"column":3,"nodeType":"759","messageId":"757","endLine":22,"endColumn":5,"fix":"788"},{"ruleId":"754","severity":2,"message":"755","line":25,"column":3,"nodeType":"759","messageId":"757","endLine":27,"endColumn":5,"fix":"789"},{"ruleId":"754","severity":2,"message":"755","line":68,"column":5,"nodeType":"759","messageId":"757","endLine":70,"endColumn":15,"fix":"790"},{"ruleId":"754","severity":2,"message":"755","line":81,"column":7,"nodeType":"759","messageId":"757","endLine":90,"endColumn":8,"fix":"791"},{"ruleId":"751","severity":2,"message":"752","line":3,"column":1,"nodeType":null,"fix":"792"},{"ruleId":"793","severity":2,"message":"794","line":113,"column":15,"nodeType":"795","messageId":"796","endLine":113,"endColumn":29,"fix":"797"},{"ruleId":"793","severity":2,"message":"794","line":126,"column":15,"nodeType":"795","messageId":"796","endLine":126,"endColumn":32,"fix":"798"},{"ruleId":"793","severity":2,"message":"794","line":130,"column":15,"nodeType":"795","messageId":"796","endLine":130,"endColumn":27,"fix":"799"},{"ruleId":"800","severity":1,"message":"801","line":155,"column":17,"nodeType":"802","endLine":159,"endColumn":19},{"ruleId":"793","severity":2,"message":"794","line":189,"column":15,"nodeType":"795","messageId":"796","endLine":189,"endColumn":30,"fix":"803"},{"ruleId":"793","severity":2,"message":"794","line":98,"column":15,"nodeType":"795","messageId":"796","endLine":98,"endColumn":29,"fix":"804"},{"ruleId":"793","severity":2,"message":"794","line":111,"column":15,"nodeType":"795","messageId":"796","endLine":111,"endColumn":32,"fix":"805"},{"ruleId":"793","severity":2,"message":"794","line":115,"column":15,"nodeType":"795","messageId":"796","endLine":115,"endColumn":27,"fix":"806"},{"ruleId":"800","severity":1,"message":"801","line":140,"column":17,"nodeType":"802","endLine":144,"endColumn":19},{"ruleId":"793","severity":2,"message":"794","line":174,"column":15,"nodeType":"795","messageId":"796","endLine":174,"endColumn":30,"fix":"807"},{"ruleId":"793","severity":2,"message":"794","line":144,"column":15,"nodeType":"795","messageId":"796","endLine":144,"endColumn":29,"fix":"808"},{"ruleId":"793","severity":2,"message":"794","line":166,"column":15,"nodeType":"795","messageId":"796","endLine":166,"endColumn":32,"fix":"809"},{"ruleId":"793","severity":2,"message":"794","line":170,"column":15,"nodeType":"795","messageId":"796","endLine":170,"endColumn":27,"fix":"810"},{"ruleId":"800","severity":1,"message":"801","line":195,"column":17,"nodeType":"802","endLine":199,"endColumn":19},{"ruleId":"793","severity":2,"message":"794","line":250,"column":15,"nodeType":"795","messageId":"796","endLine":250,"endColumn":30,"fix":"811"},{"ruleId":"793","severity":2,"message":"794","line":113,"column":15,"nodeType":"795","messageId":"796","endLine":113,"endColumn":29,"fix":"812"},{"ruleId":"793","severity":2,"message":"794","line":126,"column":15,"nodeType":"795","messageId":"796","endLine":126,"endColumn":32,"fix":"813"},{"ruleId":"793","severity":2,"message":"794","line":130,"column":15,"nodeType":"795","messageId":"796","endLine":130,"endColumn":27,"fix":"814"},{"ruleId":"800","severity":1,"message":"801","line":155,"column":17,"nodeType":"802","endLine":159,"endColumn":19},{"ruleId":"793","severity":2,"message":"794","line":189,"column":15,"nodeType":"795","messageId":"796","endLine":189,"endColumn":30,"fix":"815"},{"ruleId":"793","severity":2,"message":"794","line":104,"column":15,"nodeType":"795","messageId":"796","endLine":104,"endColumn":29,"fix":"816"},{"ruleId":"793","severity":2,"message":"794","line":117,"column":15,"nodeType":"795","messageId":"796","endLine":117,"endColumn":32,"fix":"817"},{"ruleId":"793","severity":2,"message":"794","line":121,"column":15,"nodeType":"795","messageId":"796","endLine":121,"endColumn":27,"fix":"818"},{"ruleId":"800","severity":1,"message":"801","line":146,"column":17,"nodeType":"802","endLine":150,"endColumn":19},{"ruleId":"793","severity":2,"message":"794","line":180,"column":15,"nodeType":"795","messageId":"796","endLine":180,"endColumn":30,"fix":"819"},{"ruleId":"793","severity":2,"message":"794","line":109,"column":15,"nodeType":"795","messageId":"796","endLine":109,"endColumn":29,"fix":"820"},{"ruleId":"793","severity":2,"message":"794","line":122,"column":15,"nodeType":"795","messageId":"796","endLine":122,"endColumn":32,"fix":"821"},{"ruleId":"793","severity":2,"message":"794","line":126,"column":15,"nodeType":"795","messageId":"796","endLine":126,"endColumn":27,"fix":"822"},{"ruleId":"800","severity":1,"message":"801","line":151,"column":17,"nodeType":"802","endLine":155,"endColumn":19},{"ruleId":"793","severity":2,"message":"794","line":185,"column":15,"nodeType":"795","messageId":"796","endLine":185,"endColumn":30,"fix":"823"},{"ruleId":"793","severity":2,"message":"794","line":103,"column":15,"nodeType":"795","messageId":"796","endLine":103,"endColumn":29,"fix":"824"},{"ruleId":"793","severity":2,"message":"794","line":116,"column":15,"nodeType":"795","messageId":"796","endLine":116,"endColumn":32,"fix":"825"},{"ruleId":"793","severity":2,"message":"794","line":120,"column":15,"nodeType":"795","messageId":"796","endLine":120,"endColumn":27,"fix":"826"},{"ruleId":"800","severity":1,"message":"801","line":145,"column":17,"nodeType":"802","endLine":149,"endColumn":19},{"ruleId":"793","severity":2,"message":"794","line":179,"column":15,"nodeType":"795","messageId":"796","endLine":179,"endColumn":30,"fix":"827"},{"ruleId":"793","severity":2,"message":"794","line":92,"column":15,"nodeType":"795","messageId":"796","endLine":92,"endColumn":27,"fix":"828"},{"ruleId":"793","severity":2,"message":"794","line":127,"column":15,"nodeType":"795","messageId":"796","endLine":127,"endColumn":30,"fix":"829"},{"ruleId":"793","severity":2,"message":"794","line":108,"column":15,"nodeType":"795","messageId":"796","endLine":108,"endColumn":29,"fix":"830"},{"ruleId":"793","severity":2,"message":"794","line":121,"column":15,"nodeType":"795","messageId":"796","endLine":121,"endColumn":32,"fix":"831"},{"ruleId":"793","severity":2,"message":"794","line":125,"column":15,"nodeType":"795","messageId":"796","endLine":125,"endColumn":27,"fix":"832"},{"ruleId":"800","severity":1,"message":"801","line":150,"column":17,"nodeType":"802","endLine":154,"endColumn":19},{"ruleId":"793","severity":2,"message":"794","line":184,"column":15,"nodeType":"795","messageId":"796","endLine":184,"endColumn":30,"fix":"833"},{"ruleId":"793","severity":2,"message":"794","line":101,"column":15,"nodeType":"795","messageId":"796","endLine":101,"endColumn":29,"fix":"834"},{"ruleId":"793","severity":2,"message":"794","line":114,"column":15,"nodeType":"795","messageId":"796","endLine":114,"endColumn":32,"fix":"835"},{"ruleId":"793","severity":2,"message":"794","line":118,"column":15,"nodeType":"795","messageId":"796","endLine":118,"endColumn":27,"fix":"836"},{"ruleId":"800","severity":1,"message":"801","line":143,"column":17,"nodeType":"802","endLine":147,"endColumn":19},{"ruleId":"793","severity":2,"message":"794","line":177,"column":15,"nodeType":"795","messageId":"796","endLine":177,"endColumn":30,"fix":"837"},{"ruleId":"793","severity":2,"message":"794","line":124,"column":15,"nodeType":"795","messageId":"796","endLine":124,"endColumn":27,"fix":"838"},{"ruleId":"793","severity":2,"message":"794","line":181,"column":15,"nodeType":"795","messageId":"796","endLine":181,"endColumn":30,"fix":"839"},"newline-before-return","Expected newline before return statement.","ReturnStatement","expected",{"range":"840","text":"841"},{"range":"842","text":"841"},"import/newline-after-import","Expected 1 empty line after import statement not followed by another import.",{"range":"843","text":"841"},"padding-line-between-statements","Expected blank line before this statement.","ExportDefaultDeclaration","expectedBlankLine",{"range":"844","text":"841"},"VariableDeclaration",{"range":"845","text":"841"},{"range":"846","text":"841"},{"range":"847","text":"841"},{"range":"848","text":"841"},{"range":"849","text":"841"},{"range":"850","text":"841"},{"range":"851","text":"841"},{"range":"852","text":"841"},{"range":"853","text":"841"},{"range":"854","text":"841"},{"range":"855","text":"841"},{"range":"856","text":"841"},{"range":"857","text":"841"},{"range":"858","text":"841"},{"range":"859","text":"841"},{"range":"860","text":"841"},{"range":"861","text":"841"},{"range":"862","text":"841"},{"range":"863","text":"841"},{"range":"864","text":"841"},{"range":"865","text":"841"},{"range":"866","text":"841"},{"range":"867","text":"841"},{"range":"868","text":"841"},{"range":"869","text":"841"},{"range":"870","text":"841"},{"range":"871","text":"841"},{"range":"872","text":"841"},{"range":"873","text":"841"},{"range":"874","text":"841"},{"range":"875","text":"841"},{"range":"876","text":"841"},{"range":"877","text":"841"},"lines-around-comment","Expected line before comment.","Line","before",{"range":"878","text":"841"},{"range":"879","text":"841"},{"range":"880","text":"841"},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"881","text":"841"},{"range":"882","text":"841"},{"range":"883","text":"841"},{"range":"884","text":"841"},{"range":"885","text":"841"},{"range":"886","text":"841"},{"range":"887","text":"841"},{"range":"888","text":"841"},{"range":"889","text":"841"},{"range":"890","text":"841"},{"range":"891","text":"841"},{"range":"892","text":"841"},{"range":"893","text":"841"},{"range":"894","text":"841"},{"range":"895","text":"841"},{"range":"896","text":"841"},{"range":"897","text":"841"},{"range":"898","text":"841"},{"range":"899","text":"841"},{"range":"900","text":"841"},{"range":"901","text":"841"},{"range":"902","text":"841"},{"range":"903","text":"841"},{"range":"904","text":"841"},{"range":"905","text":"841"},{"range":"906","text":"841"},{"range":"907","text":"841"},{"range":"908","text":"841"},{"range":"909","text":"841"},{"range":"910","text":"841"},{"range":"911","text":"841"},{"range":"912","text":"841"},{"range":"913","text":"841"},{"range":"914","text":"841"},{"range":"915","text":"841"},{"range":"916","text":"841"},{"range":"917","text":"841"},[531,531],"\n",[627,627],[34,34],[34,34],[561,561],[887,887],[1212,1212],[647,647],[807,807],[34,34],[34,34],[572,572],[903,903],[1229,1229],[452,452],[572,572],[903,903],[1229,1229],[572,572],[903,903],[1229,1229],[893,893],[1687,1687],[1989,1989],[644,644],[877,877],[1672,1672],[1979,1979],[1102,1102],[1897,1897],[2204,2204],[664,664],[717,717],[891,891],[1686,1686],[1993,1993],[72,72],[3629,3629],[4178,4178],[4243,4243],[6130,6130],[2956,2956],[3444,3444],[3509,3509],[5396,5396],[4658,4658],[5743,5743],[5808,5808],[8504,8504],[3689,3689],[4244,4244],[4309,4309],[6198,6198],[3178,3178],[3672,3672],[3737,3737],[5626,5626],[3430,3430],[3985,3985],[4050,4050],[5939,5939],[3024,3024],[3518,3518],[3583,3583],[5469,5469],[2703,2703],[3778,3778],[3403,3403],[3958,3958],[4023,4023],[5918,5918],[2960,2960],[3458,3458],[3523,3523],[5412,5412],[3792,3792],[5668,5668]]